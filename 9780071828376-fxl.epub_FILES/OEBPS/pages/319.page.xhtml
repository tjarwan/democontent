<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf13f" class="pf w2 h2" data-page-no="13f"><div class="pc pc13f w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">296<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 h7 y328 ff1 fs3 fc0 sc0 ls0 ws0">Existing T<span class="_ _3"/>eensy Payloads</div><div class="t m0 x3 hd y329 ff4 fs7 fc0 sc0 ls16 ws0">Since its original release, the T<span class="_ _3"/>eensy device has seen a lot of de<span class="_ _0"/>velopment <span class="ls0">specically </span></div><div class="t m0 x3 hd y32a ff4 fs7 fc0 sc0 ls0 ws0">for use in penetration testing. Many of these payloads are a<span class="_ _0"/>v<span class="_ _0"/>ailable on the Internet. </div><div class="t m0 x3 hd y1514 ff4 fs7 fc0 sc0 ls0 ws0">The Peensy backdoor mentioned pre<span class="_ _0"/>viously is a T<span class="_ _3"/>eensy payload from the folks at </div><div class="t m0 x3 hd y1515 ff4 fs7 fc0 sc0 ls0 ws0">Of<span class="_ _0"/>fensiv<span class="_ _0"/>e Security made specically for penetration testing. Peensy is a very good </div><div class="t m0 x3 hd y1516 ff4 fs7 fc0 sc0 ls0 ws0">example of a creati<span class="_ _0"/>v<span class="_ _0"/>e solution with the limitations of a keyboard de<span class="_ _0"/>vice. <span class="_ _0"/>The Peensy </div><div class="t m0 x3 hd y1e1d ff4 fs7 fc0 sc0 ls0 ws0">code is av<span class="_ _0"/>ailable at https://github<span class="_ _2"/>.com/offensi<span class="_ _0"/>ve-security/hid-backdoor<span class="_ _0"/>-peensy<span class="_ _2"/>. The </div><div class="t m0 x3 hd y1e1e ff4 fs7 fc0 sc0 ls0 ws0">payload includes functionality to signal successes back to the T<span class="_ _3"/>eensy device by </div><div class="t m0 x3 hd y1e1f ff4 fs7 fc0 sc0 ls0 ws0">toggling the  ,  , or   ke<span class="_ _0"/>ys.</div><div class="t m0 x4 hd y151a ff4 fs7 fc0 sc0 ls0 ws0">There’<span class="_ _2"/>s a video on the Offensi<span class="_ _0"/>ve Security website demonstrating the payload </div><div class="t m0 x3 hd y1e20 ff4 fs7 fc0 sc0 ls0 ws0">recov<span class="_ _0"/>ering after failures introduced by the person at the ke<span class="_ _0"/>yboard, such as closing </div><div class="t m0 x3 hd y1e21 ff4 fs7 fc0 sc0 ls0 ws0">cmd windo<span class="_ _0"/>ws or otherwise interrupting the payload deployment. The main peensy</div><div class="t m0 x3 hd y1e22 ff4 fs7 fc0 sc0 ls0 ws0">.ino code includes some excellent e<span class="_ _0"/>xamples of functions we can use to craft our o<span class="_ _0"/>wn </div><div class="t m0 x3 hd y1e23 ff4 fs7 fc0 sc0 ls0 ws0">specic payload. Some of the example functions include</div><div class="t m0 x16 h1f y1e24 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e25 ff4 fs7 fc0 sc0 ls0 ws0">Executing meterpreter shells from memory</div><div class="t m0 x16 h1f y1e26 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e27 ff4 fs7 fc0 sc0 ls0 ws0">T<span class="_ _0"/>ransferring meterpreter to disk and ex<span class="_ _0"/>ecuting using scheduled task</div><div class="t m0 x16 h1f y1e28 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e29 ff4 fs7 fc0 sc0 ls0 ws0">Minimizing all windo<span class="_ _0"/>ws</div><div class="t m0 x16 h1f y1e2a ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e2b ff4 fs7 fc0 sc0 ls0 ws0">Checking for Internet access by do<span class="_ _0"/>wnloading and ex<span class="_ _0"/>ecuting a <span class="_ _0"/>VB script</div><div class="t m0 x16 h1f y1e2c ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e2d ff4 fs7 fc0 sc0 ls0 ws0">Checking for the av<span class="_ _0"/>ailability of Po<span class="_ _0"/>wershell</div><div class="t m0 x16 h1f y1e2e ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e2f ff4 fs7 fc0 sc0 ls0 ws0">Mounting the attached SD card on the T<span class="_ _3"/>eensy and copying the le to the </div><div class="t m0 x1 hd y1e30 ff4 fs7 fc0 sc0 ls0 ws0">computer</div><div class="t m0 x16 h1f y1e31 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e32 ff4 fs7 fc0 sc0 ls0 ws0">Copying les from the SD card to the computer</div><div class="t m0 x4 hd y1e33 ff4 fs7 fc0 sc0 ls0 ws0">In addition, you might nd the follo<span class="_ _0"/>wing systems will provide e<span class="_ _0"/>xible, effecti<span class="_ _0"/>v<span class="_ _0"/>e, </div><div class="t m0 x3 hd y1e34 ff4 fs7 fc0 sc0 ls0 ws0">and fully functional payloads. Kautilya is a great resource because it provides </div><div class="t m0 x3 hd y1e35 ff4 fs7 fc0 sc0 ls0 ws0">examples for both <span class="_ _0"/>W<span class="_ _2"/>indows and Linux, both of which ha<span class="_ _0"/>ve a lot of features ready to </div><div class="t m0 x3 hd y1e36 ff4 fs7 fc0 sc0 ls0 ws0">go.</div><div class="t m0 x16 h1f y1e37 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e38 ff4 fs7 fc0 sc0 ls0 ws0">Irongeek PHUKD library</div><div class="t m0 x16 h1f y1e39 ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e3a ff4 fs7 fc0 sc0 ls0 ws0">Social engineering toolkit</div><div class="t m0 x16 h1f y1e3b ffb fse fc0 sc0 ls0 ws0">c</div><div class="t m0 x1 hd y1e3c ff4 fs7 fc0 sc0 ls0 ws0">Kautilya</div><div class="t m0 x3 h7 y1e3d ff1 fs3 fc0 sc0 ls0 ws0">Packaging T<span class="_ _3"/>eensy T<span class="_ _2"/>rojan Hardware</div><div class="t m0 x3 hd y1e3e ff4 fs7 fc0 sc0 ls0 ws0">Finally<span class="_ _2"/>, we’ll hav<span class="_ _0"/>e to choose the hardware de<span class="_ _0"/>vice in which we want to embed </div><div class="t m0 x3 hd y1e3f ff4 fs7 fc0 sc0 ls0 ws0">the T<span class="_ _3"/>eensy device. <span class="_ _0"/>T<span class="_ _3"/>ypically<span class="_ _0"/>, this will require a small amount of soldering. <span class="_ _0"/>The </div><a class="" href="https://github.com/offensive-security/hid-backdoor-peensy"><div class="d m1" style="border-style:none;position:absolute;left:198.458050px;bottom:592.640967px;width:259.000000px;height:12.000000px;background-color:rgba(255,255,255,0.000001);"/></a></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>