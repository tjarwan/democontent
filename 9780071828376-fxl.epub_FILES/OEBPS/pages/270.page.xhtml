<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf10e" class="pf w2 h2" data-page-no="10e"><div class="pc pc10e w2 h2"><div class="t m0 xa3 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 7: Phase III: Remote T<span class="_ _0"/>argeting<span class="_ _9"> </span><span class="ff1 fs9 lsa">247</span></div><div class="t m0 x3 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">user do? Chances are they’<span class="_ _2"/>d click the wireless network a fe<span class="_ _0"/>w times and get frustrated </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">when it wouldn’<span class="_ _0"/>t connect. If the user sees an open wireless network, they lik<span class="_ _0"/>ely will </div><div class="t m0 x3 hd y20f ff4 fs7 fc0 sc0 ls0 ws0">attempt to connect. Thus, at that point, all we need is an enticing name. If we’<span class="_ _2"/>re in </div><div class="t m0 x3 hd y210 ff4 fs7 fc0 sc0 ls0 ws0">a remote area, we could do something innocuous like “FREE_WIFI.<span class="_ _3"/>” If we’<span class="_ _0"/>re in an </div><div class="t m0 x3 hd y211 ff4 fs7 fc0 sc0 ls0 ws0">area with many compan<span class="_ _0"/>y-related wireless networks, we could use the same SSID b<span class="_ _0"/>ut </div><div class="t m0 x3 hd y212 ff4 fs7 fc0 sc0 ls0 ws0">with an open conguration.</div><div class="t m0 x4 hd y398 ff4 fs7 fc0 sc0 ls0 ws0">K<span class="_ _0"/>eep in mind that identifying wireless clients that hav<span class="_ _0"/>e only connected to <span class="_ _0"/>WP<span class="_ _3"/>A-</div><div class="t m0 x3 hd y399 ff4 fs7 fc0 sc0 ls0 ws0">PSK networks is far from the norm. I ha<span class="_ _0"/>v<span class="_ _0"/>e encountered it before, but it is generally </div><div class="t m0 x3 hd y3c6 ff4 fs7 fc0 sc0 ls0 ws0">the exception to the rule. In the w<span class="_ _0"/>orst-case scenario, the client device will not </div><div class="t m0 x3 hd y4b0 ff4 fs7 fc0 sc0 ls0 ws0">connect to us automatically and the user at the ke<span class="_ _0"/>yboard does not hav<span class="_ _0"/>e the pri<span class="_ _0"/>vileges </div><div class="t m0 x3 hd y4b1 ff4 fs7 fc0 sc0 ls0 ws0">to connect to wireless networks. If this is the only wireless client de<span class="_ _0"/>vice a<span class="_ _0"/>vailable at </div><div class="t m0 x3 hd y182e ff4 fs7 fc0 sc0 lsb ws16">our target or<span class="_ _0"/>ganization (extremely unlik<span class="_ _0"/>ely<span class="_ _2"/>, but still a possibility), then we ha<span class="_ _0"/>ve no </div><div class="t m0 x3 hd y182f ff4 fs7 fc0 sc0 ls0 ws0">choice but to mo<span class="_ _0"/>ve on to the ne<span class="_ _0"/>xt phase of attack.</div><div class="t m0 x4 hd y4b2 ff4 fs7 fc0 sc0 ls0 ws0">Our three best options to create a rogue access point (AP) are with a standard </div><div class="t m0 x3 h3f y4b3 ff4 fs7 fc0 sc0 ls0 ws0">access point or a Linux laptop, using either <span class="fff">airbase-ng</span> or <span class="fff">hostapd</span>. If you hav<span class="_ _0"/>e </div><div class="t m0 x3 hd y39e ff4 fs7 fc0 sc0 ls0 ws0">the opportunity to use a regular hardw<span class="_ _0"/>are-based access point, you should prefer this </div><div class="t m0 x3 hd y39f ff4 fs7 fc0 sc0 ls0 ws0">method. If, ho<span class="_ _0"/>wev<span class="_ _0"/>er<span class="_ _0"/>, you’<span class="_ _2"/>re in an area where this might raise some suspicion, then </div><div class="t m0 x3 hd y3a0 ff4 fs7 fc0 sc0 ls0 ws0">we also hav<span class="_ _0"/>e the capability of doing e<span class="_ _0"/>verything from a single Linux laptop.</div><div class="t m0 x4 hd y11f3 ff4 fs7 fc0 sc0 ls0 ws0">The use of a regular access point w<span class="_ _0"/>ould look like Figure 7-17. In this case, rather </div><div class="t m0 x3 hd y11f4 ff4 fs7 fc0 sc0 ls0 ws0">than having all of the functionality pre<span class="_ _0"/>viously performed on the Linux laptop, we </div><div class="t m0 x3 hd y3a3 ff4 fs7 fc0 sc0 ls0 ws0">hav<span class="_ _0"/>e the access point handling some of the basic functionality<span class="_ _2"/>, such as handing out </div><div class="t m0 x3 hd y3a4 ff4 fs7 fc0 sc0 ls0 ws0">IP conguration via DHCP<span class="_ _1b"/>. The access point still congures the client de<span class="_ _0"/>vices so </div><div class="t m0 x3 hd y3a5 ff4 fs7 fc0 sc0 lsb ws16">that the gate<span class="_ _0"/>way and DNS servers are the IP address of the Linux laptop.</div><div class="t m0 x4 hd y19a1 ff4 fs7 fc0 sc0 ls0 ws0">The only minor limitation with this is that most hardware-based access points </div><div class="t m0 x3 hd y19a2 ff4 fs7 fc0 sc0 ls0 ws0">will not support a greedy conguration—that is, responding to any probe request. </div><div class="t m0 x3 hd y3a8 ff4 fs7 fc0 sc0 ls0 ws0">Ho<span class="_ _0"/>wev<span class="_ _0"/>er<span class="_ _0"/>, there are also some benets of doing it this way<span class="_ _3"/>. One benet is that we </div><div class="t m0 x3 hd y3a9 ff4 fs7 fc0 sc0 ls0 ws0">can plant the access point in a location and then run Ethernet to where<span class="_ _0"/>ver we will be </div><div class="t m0 x3 hd y3aa ff4 fs7 fc0 sc0 ls0 ws0">(which can be some distance aw<span class="_ _0"/>ay). It is also nice to use a small piece of hardware </div><div class="t m0 x3 hd y3ab ff4 fs7 fc0 sc0 ls0 ws0">that is specically built to be an access point, taking some of the headache out of </div><div class="t m0 x3 hd y19a3 ff4 fs7 fc0 sc0 ls0 ws0">managing that system on our laptop. <span class="_ _0"/>W<span class="_ _3"/>e’ll look at both methods of using a hardware </div><div class="t m0 x3 hd y19a4 ff4 fs7 fc0 sc0 ls0 ws0">AP and a software-based <span class="_ _2"/>AP in this chapter<span class="_ _0"/>.</div><div class="t m0 x4 hd y581 ff4 fs7 fc0 sc0 ls0 ws0">If we are going to use our laptop as the access point as well, it’<span class="_ _2"/>s typically best to </div><div class="t m0 x3 hd y582 ff4 fs7 fc0 sc0 ls0 ws0">hav<span class="_ _0"/>e at least two wireless netw<span class="_ _0"/>ork cards in the system. This allo<span class="_ _0"/>ws us to more easily </div><div class="t m0 x3 hd y583 ff4 fs7 fc0 sc0 ls0 ws0">provide wireless services as well as monitor other netw<span class="_ _0"/>orks and perform packet </div><div class="t m0 x3 hd y584 ff4 fs7 fc0 sc0 ls0 ws0">injection when necessary<span class="_ _2"/>, such as when we need to spoof disassociation messages. </div><div class="t m0 x3 hd y585 ff4 fs7 fc0 sc0 ls0 ws0">I won’<span class="_ _0"/>t go into detail on how to congure a hardw<span class="_ _0"/>are-based access point, but will </div><div class="t m0 x3 hd y586 ff4 fs7 fc0 sc0 ls0 ws0">simply cov<span class="_ _0"/>er what the conguration should be.</div><div class="t m0 x4 h3f y587 ff4 fs7 fc0 sc0 ls0 ws0">For the Linux-based access point, we’<span class="_ _0"/>ll primarily be using the <span class="fff">airbase-ng</span></div><div class="t m0 x3 hd y19a5 ff4 fs7 fc0 sc0 ls0 ws0">program, which is part of the aircrack-ng suite. T<span class="_ _3"/>o use most of the activ<span class="_ _0"/>e commands </div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>