<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf10f" class="pf w2 h2" data-page-no="10f"><div class="pc pc10f w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">248<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">for aircrack-ng tools, we’ll need to enable monitor mode. <span class="_ _2"/>As mentioned earlier<span class="_ _0"/>, </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">monitor mode is a special mode that essentially allo<span class="_ _0"/>ws the interface to manipulate </div><div class="t m0 x3 hd y20f ff4 fs7 fc0 sc0 ls0 ws0">the radio at its most fundamental le<span class="_ _0"/>vel, which allo<span class="_ _0"/>ws us to listen to raw radio signals </div><div class="t m0 x3 h3f y210 ff4 fs7 fc0 sc0 ls0 ws0">and create arbitrary frames to send out the radio interface. <span class="_ _0"/>The <span class="fff">airbase-ng</span></div><div class="t m0 x3 hd y120 ff4 fs7 fc0 sc0 ls0 ws0">tool provides a f<span class="_ _0"/>antastic set of options for us to create our rogue access point in an </div><div class="t m0 x3 hd y121 ff4 fs7 fc0 sc0 ls0 ws0">ef<span class="_ _0"/>fectiv<span class="_ _0"/>e way<span class="_ _3"/>. Let’<span class="_ _0"/>s look at the most basic conguration. In the follo<span class="_ _0"/>wing example, </div><div class="t m0 x3 hd y398 ff4 fs7 fc0 sc0 ls0 ws0">we’<span class="_ _2"/>ve enabled monitor mode on the wlan0 interface, which is then accessible as </div><div class="t m0 x3 hd y399 ff4 fs7 fc0 sc0 ls0 ws0">the mon0 interface. <span class="_ _0"/>W<span class="_ _3"/>e then create an access point on channel 11 and broadcast an </div><div class="t m0 x3 hd y3c6 ff4 fs7 fc0 sc0 ls0 ws0">ESSID of NO<span class="_ _0"/>T<span class="_ _3"/>-EVIL using the mon0 interface.</div><div class="t m0 x3 h44 y18dd fff fse fc0 sc0 ls0 ws0">root@kali:/# airmon-ng start wlan0</div><div class="t m0 x3 h44 y18de fff fse fc0 sc0 ls0 ws0">--- SNIP ---</div><div class="t m0 x3 h44 y18df fff fse fc0 sc0 ls0 ws0">Interface   Chipset           Driver</div><div class="t m0 x3 h44 y19a6 fff fse fc0 sc0 ls0 ws0">wlan0       Intel 5300AGN     iwlwifi - [phy0]</div><div class="t m0 x3 h44 y19a7 fff fse fc0 sc0 ls0 ws0">                        (monitor mode enabled on mon0)</div><div class="t m0 x3 h44 y19a8 fff fse fc0 sc0 ls0 ws0">root@kali:/# airbase-ng -c 11 --essid NOT-EVIL mon0</div><div class="t m0 x3 h44 y19a9 fff fse fc0 sc0 ls0 ws0">12:00:59  Created tap interface at0</div><div class="t m0 x3 h44 y19aa fff fse fc0 sc0 ls0 ws0">12:00:59  Trying to set MTU on at0 to 1500</div><div class="t m0 x3 h44 y19ab fff fse fc0 sc0 ls0 ws0">12:00:59  Trying to set MTU on mon0 to 1800</div><div class="t m0 x3 h44 y19ac fff fse fc0 sc0 ls0 ws0">12:00:59  Access Point with BSSID 00:21:6A:43:aC:C7 started.</div><div class="t m0 x4 h3f y19ad ff4 fs7 fc0 sc0 ls0 ws0">If there are any processes that might cause an issue, <span class="fff">airmon-ng</span> will let you </div><div class="t m0 x3 hd y19ae ff4 fs7 fc0 sc0 ls0 ws0">kno<span class="_ _0"/>w<span class="_ _2"/>. In Kali, you might have to kill the Netw<span class="_ _0"/>orkManager process and the wpa_</div><div class="t m0 x3 hd y19af ff4 fs7 fc0 sc0 ls0 ws0">supplicant process if either are running.</div><div class="t m0 x4 h3f y19b0 ff4 fs7 fc0 sc0 ls0 ws0">Some of the additional <span class="fff">airmon-ng</span> options that are most useful for us are</div><div class="t m0 x3 h44 y19b1 fff fse fc0 sc0 ls0 ws0">-a bssid    : set Access Point MAC address</div><div class="t m0 x3 h44 y19b2 fff fse fc0 sc0 ls0 ws0">-v          : verbose (print more messages)</div><div class="t m0 x3 h44 y19b3 fff fse fc0 sc0 ls0 ws0">-X          : hidden ESSID</div><div class="t m0 x3 h44 y19b4 fff fse fc0 sc0 ls0 ws0">-P          : respond to all probes, even when specifying ESSIDs</div><div class="t m0 x3 h44 y19b5 fff fse fc0 sc0 ls0 ws0">-C seconds  : enables beaconing of probed ESSID values (requires -P)</div><div class="t m0 x3 h44 y19b6 fff fse fc0 sc0 ls0 ws0">FILTER OPTIONS</div><div class="t m0 x3 h44 y19b7 fff fse fc0 sc0 ls0 ws0">--client MAC     : MAC of client to filter</div><div class="t m0 x3 h44 y19b8 fff fse fc0 sc0 ls0 ws0">--clients file   : read a list of MACs out of that file</div><div class="t m0 x3 h44 y19b9 fff fse fc0 sc0 ls0 ws0">--essids file    : read a list of ESSIDs out of that file</div><div class="t m0 x3 h44 y19ba fff fse fc0 sc0 ls0 ws0">--bssid MAC      : BSSID to filter/use</div><div class="t m0 x3 h44 y19bb fff fse fc0 sc0 ls0 ws0">--bssids file    : read a list of BSSIDs out of that file</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>