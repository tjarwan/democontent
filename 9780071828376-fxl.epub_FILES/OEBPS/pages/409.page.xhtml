<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf199" class="pf w2 h2" data-page-no="199"><div class="pc pc199 w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">386<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x4 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">That’<span class="_ _2"/>s it—the xfupdate.exe program appears to operate solely as a means to </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">query the server for an upgrade to the le<span class="_ _0"/>gitimate software and contains no other </div><div class="t m0 x3 hd y11e ff4 fs7 fc0 sc0 ls0 ws0">functionality<span class="_ _2"/>, which is truly all the program does. Let’<span class="_ _0"/>s analyze what is happening </div><div class="t m0 x3 hd y15c ff4 fs7 fc0 sc0 lsb ws16">behind the scenes and what the in<span class="_ _0"/>v<span class="_ _0"/>estigator is not seeing.</div><div class="t m0 x4 hd y15d ff4 fs7 fc0 sc0 ls10 ws16">Because the in<span class="_ _0"/>v<span class="_ _0"/>estigator is able to in<span class="_ _0"/>vestigate and understand the true functionality </div><div class="t m0 x3 hd y15e ff4 fs7 fc0 sc0 ls13 ws0">of the piece of software that has warranted attention, then there’<span class="_ _2"/>s no reason to </div><div class="t m0 x3 hd y15f ff4 fs7 fc0 sc0 ls16 ws0">in<span class="_ _0"/>v<span class="_ _0"/>estigate any further<span class="_ _2"/>. Of course, we’<span class="_ _0"/>re making an assumption that there is no other </div><div class="t m0 x3 hd y160 ff4 fs7 fc0 sc0 ls16 ws1b">malware on the system that is not ours, b<span class="_ _0"/>ut I digress. <span class="_ _0"/>This is further corroborated by </div><div class="t m0 x3 hd y161 ff4 fs7 fc0 sc0 ls16 ws1b">the end user<span class="_ _0"/>, who e<span class="_ _0"/>xplains that the software we ha<span class="_ _0"/>ve b<span class="_ _0"/>undled our backdoor with is </div><div class="t m0 x3 hd y273 ff4 fs7 fc0 sc0 ls16 ws0">necessary for them to perform their job function; at least they assume so.</div><div class="t m0 x4 hd y274 ff4 fs7 fc0 sc0 ls0 ws0">All of the actions and operation of our backdoor are designed with the </div><div class="t m0 x3 hd y275 ff4 fs7 fc0 sc0 ls0 ws0">understanding of ho<span class="_ _0"/>w the vast majority of mal<span class="_ _0"/>ware, viruses, and backdoors ha<span class="_ _0"/>ve </div><div class="t m0 x3 hd y276 ff4 fs7 fc0 sc0 lsb ws16">operated in the past and thus, the actions an e<span class="_ _0"/>ven moderately talented in<span class="_ _0"/>v<span class="_ _0"/>estigator </div><div class="t m0 x3 hd y277 ff4 fs7 fc0 sc0 ls0 ws0">would perform and the things the<span class="_ _0"/>y would look for<span class="_ _2"/>. For example, it’<span class="_ _2"/>s common to </div><div class="t m0 x3 hd y278 ff4 fs7 fc0 sc0 ls0 ws0">delete a registry entry that automatically starts an e<span class="_ _0"/>xecutable and reboot a fe<span class="_ _0"/>w times </div><div class="t m0 x3 hd y279 ff4 fs7 fc0 sc0 ls0 ws0">to see if the entry is restored. If the entry is restored, this can clearly be an indication </div><div class="t m0 x3 hd y5ea ff4 fs7 fc0 sc0 ls0 ws0">of something suspicious. Like<span class="_ _0"/>wise, if we close a program (through T<span class="_ _3"/>ask Manager<span class="_ _0"/>, </div><div class="t m0 x3 hd y5eb ff4 fs7 fc0 sc0 ls0 ws0">for example) and the process automatically starts shortly after or after a reboot, this </div><div class="t m0 x3 hd y5ec ff4 fs7 fc0 sc0 ls0 ws0">can also appear suspicious.</div><div class="t m0 x4 hd y27d ff4 fs7 fc0 sc0 ls16 ws0">Y<span class="_ _1b"/>ou might be asking: If the in<span class="_ _0"/>vestigator deleted the autostart registry entry and </div><div class="t m0 x3 hd y27e ff4 fs7 fc0 sc0 ls16 ws1b">killed the process, and we don't automatically restart, then ho<span class="_ _0"/>w do we maintain stealth </div><div class="t m0 x3 hd y1824 ff4 fs7 fc0 sc0 ls16 ws1b">access? One method is to utilize another “watchdog” process that monitors the status </div><div class="t m0 x3 hd y1825 ff4 fs7 fc0 sc0 ls16 ws1b">of our backdoor<span class="_ _2"/>. This design of having other e<span class="_ _0"/>xecutables that can ensure the backdoor </div><div class="t m0 x3 hd y1826 ff4 fs7 fc0 sc0 ls16 ws1b">is running and repair anything that might be brok<span class="_ _0"/>en is not new<span class="_ _3"/>. In fact, many viruses </div><div class="t m0 x3 hd y1827 ff4 fs7 fc0 sc0 ls16 ws1b">utilize this technique to restore autostart methods and automatically restart processes, </div><div class="t m0 x3 hd y1828 ff4 fs7 fc0 sc0 ls10 ws16">which is exactly why our backdoor must operate slightly dif<span class="_ _0"/>ferently<span class="_ _2"/>.</div><div class="t m0 x4 hd y284 ff4 fs7 fc0 sc0 ls0 ws0">W<span class="_ _3"/>e know that these actions of deleting our registry entry or manipulating our </div><div class="t m0 x3 hd y285 ff4 fs7 fc0 sc0 ls0 ws0">process are likely those of a technical operator<span class="_ _2"/>, and thus want to be very careful with </div><div class="t m0 x3 hd y286 ff4 fs7 fc0 sc0 ls0 ws0">ho<span class="_ _0"/>w we respond. Rather than automatically restoring our backdoor<span class="_ _0"/>, we can wait an </div><div class="t m0 x3 hd y287 ff4 fs7 fc0 sc0 lsb ws16">ample amount of time or wait for a specic trigger e<span class="_ _0"/>vent. Ev<span class="_ _0"/>en if the in<span class="_ _0"/>v<span class="_ _0"/>estigator </div><div class="t m0 x3 hd y1829 ff4 fs7 fc0 sc0 ls0 ws0">were running the compromised system in their lab to keep an e<span class="_ _0"/>ye on it, chances are </div><div class="t m0 x3 hd y182a ff4 fs7 fc0 sc0 lsb ws16">their in<span class="_ _0"/>v<span class="_ _0"/>estigation won’t last much longer than a week—after all, the end user needs </div><div class="t m0 x3 hd y182b ff4 fs7 fc0 sc0 ls0 ws0">to get back to work. <span class="_ _0"/>Thus, we can wait a fe<span class="_ _0"/>w days, or a fe<span class="_ _0"/>w weeks, and then restore </div><div class="t m0 x3 hd y182c ff4 fs7 fc0 sc0 ls0 ws0">our backdoor and continue communicating with our command-and-control server<span class="_ _2"/>. </div><div class="t m0 x3 hd y247d ff4 fs7 fc0 sc0 ls0 ws0">After all, what’<span class="_ _2"/>s a week or two in the grand scheme of maintaining covert access for </div><div class="t m0 x3 hd y247e ff4 fs7 fc0 sc0 ls0 ws0">many months or years?</div><div class="t m0 x4 hd y247f ff4 fs7 fc0 sc0 ls0 ws0">T<span class="_ _3"/>o take our watchdog system a step further<span class="_ _0"/>, we wouldn’<span class="_ _0"/>t want to rely on the </div><div class="t m0 x3 hd y28f ff4 fs7 fc0 sc0 ls0 ws0">system date either<span class="_ _2"/>. I have changed the system date before on a computer I w<span class="_ _0"/>as </div><div class="t m0 x3 hd y182d ff4 fs7 fc0 sc0 lsb ws16">in<span class="_ _0"/>v<span class="_ _0"/>estigating, knowing that some viruses will perform dif<span class="_ _0"/>ferent functions based on </div><div class="t m0 x3 hd y2480 ff4 fs7 fc0 sc0 ls0 ws0">the date or time. The method is simple: create a record for a specic interv<span class="_ _0"/>al of time </div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>