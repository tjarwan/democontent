<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf1bb" class="pf w2 h2" data-page-no="1bb"><div class="pc pc1bb w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">420<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 h40 ya7f fff fs5 fc0 sc0 ls0 ws0">    // Print the process name and identifier.</div><div class="t m0 x3 h40 ya80 fff fs5 fc0 sc0 ls0 ws0">    if ( strcmp( szProcessName, EXENAME) == 0 )</div><div class="t m0 x3 h40 ya81 fff fs5 fc0 sc0 ls0 ws0">    {</div><div class="t m0 x3 h40 ya82 fff fs5 fc0 sc0 ls0 ws0">     // _tprintf( TEXT("%s  (PID: %u)\n"), szProcessName, processID );</div><div class="t m0 x3 h40 y259c fff fs5 fc0 sc0 ls0 ws0">      procRunning = 1;</div><div class="t m0 x3 h40 y259d fff fs5 fc0 sc0 ls0 ws0">     }</div><div class="t m0 x3 h40 y259e fff fs5 fc0 sc0 ls0 ws0">    // Release the handle to the process.</div><div class="t m0 x3 h40 y259f fff fs5 fc0 sc0 ls0 ws0">    CloseHandle( hProcess );</div><div class="t m0 x3 h40 y27de fff fs5 fc0 sc0 ls0 ws0">        }</div><div class="t m0 x3 h40 y27df fff fs5 fc0 sc0 ls0 ws0">    }</div><div class="t m0 x3 h40 y27e0 fff fs5 fc0 sc0 ls0 ws0">   // printf("Sleeping...\n");</div><div class="t m0 x3 h40 y25a3 fff fs5 fc0 sc0 ls0 ws0">    if ( procRunning == 0 )</div><div class="t m0 x3 h40 y25a4 fff fs5 fc0 sc0 ls0 ws0">    {</div><div class="t m0 x3 h40 y27e1 fff fs5 fc0 sc0 ls0 ws0">       printf("process is not running\n");</div><div class="t m0 x3 h40 y27e2 fff fs5 fc0 sc0 ls0 ws0">    }</div><div class="t m0 x3 h40 y27e3 fff fs5 fc0 sc0 ls0 ws0">    if ( procRunning == 1)</div><div class="t m0 x3 h40 y27e4 fff fs5 fc0 sc0 ls0 ws0">    {</div><div class="t m0 x3 h40 y27e5 fff fs5 fc0 sc0 ls0 ws0">        printf("process is running\n");</div><div class="t m0 x3 h40 y27e6 fff fs5 fc0 sc0 ls0 ws0">    }</div><div class="t m0 x3 h40 y27e7 fff fs5 fc0 sc0 ls0 ws0">    Sleep(1000);</div><div class="t m0 x3 h40 y27e8 fff fs5 fc0 sc0 ls0 ws0">}</div><div class="t m0 x3 h40 y27e9 fff fs5 fc0 sc0 ls0 ws0">    return 0;</div><div class="t m0 x3 h40 y27ea fff fs5 fc0 sc0 ls0 ws0">}</div><div class="t m0 x4 hd y27eb ff4 fs7 fc0 sc0 ls0 ws0">In this basic example, you can see that this program loops indenitely<span class="_ _3"/>, or that is </div><div class="t m0 x3 hd y27ec ff4 fs7 fc0 sc0 ls0 ws0">until it is closed. It iterates through all open processes and looks specically for the </div><div class="t m0 x3 hd y27ed ff4 fs7 fc0 sc0 ls0 ws0">EXEN<span class="_ _0"/>AME, which is dened from the very be<span class="_ _0"/>ginning of the le. It then sets the </div><div class="t m0 x3 hd y27ee ff4 fs7 fc0 sc0 ls0 ws0">integer for the procRunning v<span class="_ _0"/>ariable accordingly to indicate whether the process is </div><div class="t m0 x3 hd y27ef ff4 fs7 fc0 sc0 ls0 ws0">running or not. <span class="_ _3"/>Y<span class="_ _3"/>ou can compile this program, link to the psapi library<span class="_ _2"/>, and run it. </div><div class="t m0 x3 hd y27f0 ff4 fs7 fc0 sc0 ls0 ws20">Y<span class="_ _1b"/>ou’ll notice that as you open and close calc.ex<span class="_ _0"/>e, the program alerts you accordingly<span class="_ _2"/>.</div><div class="t m0 x4 hd y27f1 ff4 fs7 fc0 sc0 ls0 ws0">Thus, at this point, we choose what we’<span class="_ _2"/>d like to do at each of the if statements. </div><div class="t m0 x3 hd y27f2 ff4 fs7 fc0 sc0 ls0 ws0">For e<span class="_ _0"/>xample, if this were our backdoor watchdog service, we could create a separate </div><div class="t m0 x3 hd y27f3 ff4 fs7 fc0 sc0 ls0 ws0">function called launchBackdoor(), which would load the backdoor using the </div><div class="t m0 x3 hd y27f4 ff4 fs7 fc0 sc0 ls0 ws0">CreateProcess function we cov<span class="_ _0"/>ered earlier<span class="_ _0"/>, as in the follo<span class="_ _0"/>wing example:</div><div class="t m0 x3 h44 y27f5 fff fse fc0 sc0 ls0 ws0">    if ( procRunning == 0 )</div><div class="t m0 x3 h44 y27f6 fff fse fc0 sc0 ls0 ws0">    {</div><div class="t m0 x3 h44 y27f7 fff fse fc0 sc0 ls0 ws0">       //printf("process is not running\n");</div><div class="t m0 x3 h44 y27f8 fff fse fc0 sc0 ls0 ws0">      launchBackdoor();</div><div class="t m0 x3 h44 y27f9 fff fse fc0 sc0 ls0 ws0">    }</div><div class="t m0 x4 hd y27fa ff4 fs7 fc0 sc0 ls0 ws0">W<span class="_ _3"/>e can take the same exact watchdog code and utilize that as the process that </div><div class="t m0 x3 hd y27fb ff4 fs7 fc0 sc0 lsb ws16">monitors for any indication that someone may be in<span class="_ _2"/>vestigating the compromised </div><div class="t m0 x3 hd y27fc ff4 fs7 fc0 sc0 lsb ws16">system. <span class="_ _2"/>Again, we can monitor for the existence of any of the follo<span class="_ _0"/>wing processes, </div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>