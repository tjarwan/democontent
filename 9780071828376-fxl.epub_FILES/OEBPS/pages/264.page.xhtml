<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf108" class="pf w2 h2" data-page-no="108"><div class="pc pc108 w2 h2"><div class="t m0 xa3 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 7: Phase III: Remote T<span class="_ _0"/>argeting<span class="_ _9"> </span><span class="ff1 fs9 lsa">241</span></div><div class="t m0 x3 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">at a BSSID and specify the interface to use, and it will take care of the rest. In the </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">follo<span class="_ _0"/>wing example, you’ll see we specied the BSSID, and rea<span class="_ _0"/>v<span class="_ _0"/>er automatically </div><div class="t m0 x3 hd y20f ff4 fs7 fc0 sc0 ls0 ws0">found the correct channel and ESSID:</div><div class="t m0 x3 h44 ya39 fff fse fc0 sc0 ls0 ws0">root@kali:~# reaver -b F6:E6:A8:42:99:B1 -i mon0 -vv</div><div class="t m0 x3 h44 y1915 fff fse fc0 sc0 ls0 ws0">Reaver v1.4 WiFi Protected Setup Attack Tool</div><div class="t m0 x3 h44 y1916 fff fse fc0 sc0 ls0 ws0">Copyright (c) 2011, Tactical Network Solutions, Craig Heffner </div><div class="t m0 x3 h44 y1917 fff fse fc0 sc0 ls0 ws0">&lt;cheffner@tacnetsol.com&gt;</div><div class="t m0 x3 h44 y1918 fff fse fc0 sc0 ls0 ws0">[+] Waiting for beacon from F6:E6:A8:42:99:B1</div><div class="t m0 x3 h44 y1919 fff fse fc0 sc0 ls0 ws0">[+] Switching mon0 to channel 6</div><div class="t m0 x3 h44 y191a fff fse fc0 sc0 ls0 ws0">[+] Associated with F8:ED:A5:22:95:B0 (ESSID: WeakNet)</div><div class="t m0 x3 h44 y191b fff fse fc0 sc0 ls0 ws0">[+] Trying pin 12345670</div><div class="t m0 x4 hd y191c ff4 fs7 fc0 sc0 ls0 ws0">Some access points are set to limit the rate of failed PIN entries. If this is the case, </div><div class="t m0 x3 hd y191d ff4 fs7 fc0 sc0 ls0 ws0">you’ll probably see an error message like the follo<span class="_ _0"/>wing output. If you do this, all </div><div class="t m0 x3 hd y191e ff4 fs7 fc0 sc0 ls0 ws0">subsequent attempts will hav<span class="_ _0"/>e to wait 60 seconds. <span class="_ _0"/>This will make our brute-force </div><div class="t m0 x3 hd y191f ff4 fs7 fc0 sc0 ls0 ws0">attempt take way too long. <span class="_ _0"/>This doesn’<span class="_ _0"/>t mean we can’t brute-force the PIN—just that </div><div class="t m0 x3 hd y1920 ff4 fs7 fc0 sc0 ls0 ws0">it will probably take much longer than we are willing to wait.</div><div class="t m0 x3 h40 y1921 fff fs5 fc0 sc0 ls0 ws0">[!] WARNING: Detected AP rate limiting, waiting 60 seconds before re-checking</div><div class="t m0 x3 h40 y1922 fff fs5 fc0 sc0 ls0 ws0">[!] WARNING: Detected AP rate limiting, waiting 60 seconds before re-checking</div><div class="t m0 x3 h7 y1923 ff1 fs3 fc0 sc0 ls0 ws0">Wireless V<span class="_ _0"/>endor V<span class="_ _0"/>ulnerabilities</div><div class="t m0 x3 hd y1924 ff4 fs7 fc0 sc0 ls0 ws0">There hav<span class="_ _0"/>e been and will continue to be wireless vulnerabilities that are specic to a </div><div class="t m0 x3 hd y1925 ff4 fs7 fc0 sc0 ls0 ws0">particular vendor or product. Some of these are meaningful and can pro<span class="_ _0"/>vide us with </div><div class="t m0 x3 hd y1926 ff4 fs7 fc0 sc0 ls0 ws0">an easy way into an otherwise secure wireless network. <span class="_ _2"/>W<span class="_ _2"/>e can typically identify </div><div class="t m0 x3 hd y1927 ff4 fs7 fc0 sc0 ls0 ws0">which vendor the wireless equipment is from based on the OUI of the MA<span class="_ _2"/>C address, </div><div class="t m0 x3 hd y1928 ff4 fs7 fc0 sc0 ls0 ws0">at which point we can research if there are any current vulnerabilities for that v<span class="_ _0"/>endor<span class="_ _2"/>. </div><div class="t m0 x3 hd y1929 ff4 fs7 fc0 sc0 ls0 ws0">For e<span class="_ _0"/>xample, in mid-2013, researchers found a vulnerability in the selection of <span class="_ _0"/>WP<span class="_ _3"/>A </div><div class="t m0 x3 hd y192a ff4 fs7 fc0 sc0 ls0 ws0">passwords by <span class="_ _2"/>Apple iOS devices. <span class="_ _0"/>The researchers found that when these de<span class="_ _0"/>vices </div><div class="t m0 x3 hd y192b ff4 fs7 fc0 sc0 ls0 ws0">generated a default <span class="_ _0"/>WP<span class="_ _3"/>A password, the password w<span class="_ _0"/>ould always be a four<span class="_ _0"/>-to-six-</div><div class="t m0 x3 hd y192c ff4 fs7 fc0 sc0 ls0 ws0">character word follo<span class="_ _0"/>wed by four numbers. The<span class="_ _0"/>y re<span class="_ _0"/>verse-engineered the process and </div><div class="t m0 x3 hd y192d ff4 fs7 fc0 sc0 ls0 ws0">found that the base words consisted of fe<span class="_ _0"/>wer than 2,000 words. In total, that meant </div><div class="t m0 x3 hd y192e ff4 fs7 fc0 sc0 ls0 ws0">there were only slightly more than 50,000 passwords, which could be brute-forced in </div><div class="t m0 x3 hd y192f ff4 fs7 fc0 sc0 ls0 ws0">under an hour<span class="_ _2"/>.</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>