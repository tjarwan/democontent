<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf70" class="pf w2 h2" data-page-no="70"><div class="pc pc70 w2 h2"><img class="bi x3 y9fe w4 h45" alt="" src="bg70.png"/><div class="t m0 x93 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 4: An APT Approach to Reconnaissance <span class="_ _3f"> </span><span class="ff1 fs9 lsa">89</span></div><div class="t m0 x20 h1d y1cc ff1 fs7 fc0 sc0 ls0 ws0">T<span class="_ _2"/>ool<span class="_ _42"> </span>Description</div><div class="t m0 x20 h6 y1cd ff4 fs2 fc0 sc0 ls0 ws0">erce<span class="_ _43"> </span>Perl script supporting threads and brute force <span class="_ _2"/>A and PTR records </div><div class="t m0 x20 h6 y1ce ff4 fs2 fc0 sc0 ls0 ws0">dnsenum<span class="_ _44"> </span>Perl script supporting XML output, Google scraping, brute force</div><div class="t m0 x20 h6 y1cf ff4 fs2 fc0 sc0 ls0 ws0">dnsrecon<span class="_ _44"> </span>Python threaded tool supporting Google searches, CSV output, XML output, </div><div class="t m0 x8c h6 y9ff ff4 fs2 fc0 sc0 ls0 ws0">and SQLite database output</div><div class="t m0 x20 h6 ya00 ff4 fs2 fc0 sc0 ls0 ws0">dnsmap<span class="_ _45"> </span>Binary simple and effecti<span class="_ _0"/>v<span class="_ _0"/>e brute forcing, CSV output</div><div class="t m0 x4 hd ya01 ff4 fs7 fc0 sc0 ls0 ws0">I prefer using dnsrecon, as it supports many useful options and performs a fe<span class="_ _0"/>w </div><div class="t m0 x3 hd ya02 ff4 fs7 fc0 sc0 ls0 ws0">benecial queries by default. <span class="_ _3"/>Y<span class="_ _1b"/>ou can perform multiple lookup types using the -t </div><div class="t m0 x3 hd ya03 ff4 fs7 fc0 sc0 ls0 ws0">option and separate each type with a comma. The a<span class="_ _0"/>v<span class="_ _0"/>ailable options are provided in </div><div class="t m0 x3 hd ya04 ff4 fs7 fc0 sc0 ls0 ws0">the follo<span class="_ _0"/>wing table.</div><div class="t m0 x20 h1d ya05 ff1 fs7 fc0 sc0 ls0 ws0">-t Option<span class="_ _40"> </span>Description</div><div class="t m0 x20 h6 ya06 ff4 fs2 fc0 sc0 ls0 ws0">Brt<span class="_ _46"> </span>Brute-force domains and hosts using a giv<span class="_ _0"/>en dictionary</div><div class="t m0 x20 h6 ya07 ff4 fs2 fc0 sc0 ls0 ws0">Rvl<span class="_ _47"> </span>Rev<span class="_ _0"/>erse lookup</div><div class="t m0 x20 h6 ya08 ff4 fs2 fc0 sc0 ls0 ws0">Srv<span class="_ _48"> </span>Enumerate common SR<span class="_ _2"/>V records for a gi<span class="_ _0"/>ven domain</div><div class="t m0 x20 h6 ya09 ff4 fs2 fc0 sc0 ls0 ws0">Axfr<span class="_ _49"> </span>T<span class="_ _2"/>est all NS servers in a domain for miscongured zone transfers</div><div class="t m0 x20 h6 ya0a ff4 fs2 fc0 sc0 ls0 ws0">Goo<span class="_ _4a"> </span>Perform a Google search for subdomains and hosts</div><div class="t m0 x4 hd ya0b ff4 fs7 fc0 sc0 ls0 ws0">It can be helpful to use the -c out.csv option to sav<span class="_ _0"/>e all of the output to comma-</div><div class="t m0 x3 hd ya0c ff4 fs7 fc0 sc0 ls0 ws0">separated v<span class="_ _0"/>alue (CSV) format to the le out.csv<span class="_ _2"/>. This makes it handy for feeding the </div><div class="t m0 x3 hd ya0d ff4 fs7 fc0 sc0 ls0 ws0">results into our next tools. <span class="_ _0"/>When using the brute-force option, it can also be handy to </div><div class="t m0 x3 hd ya0e ff4 fs7 fc0 sc0 ls0 ws0">use the -v option, which sho<span class="_ _0"/>ws the records being attempted.</div><div class="t m0 x4 hd ya0f ff4 fs7 fc0 sc0 lsb ws16">Let’<span class="_ _2"/>s look at an example brute-force session against weak-target.com:</div><div class="t m0 x3 h40 ya10 fff fs5 fc0 sc0 ls0 ws0">user@kali:~$ dnsrecon -d weak-target.com -t brt --dictionary ./hosts.txt </div><div class="t m0 x3 h40 ya11 fff fs5 fc0 sc0 ls0 ws0">[*] Performing host and subdomain brute force against weak-target.com</div><div class="t m0 x3 h40 ya12 fff fs5 fc0 sc0 ls0 ws0">[*]    A vpn.weak-target.com 173.236.137.232</div><div class="t m0 x3 h40 ya13 fff fs5 fc0 sc0 ls0 ws0">[*]    A www.weak-target.com 173.236.137.232</div><div class="t m0 x3 h40 ya14 fff fs5 fc0 sc0 ls0 ws0">[*]    A admin.weak-target.com 173.236.137.232</div><div class="t m0 x3 h40 ya15 fff fs5 fc0 sc0 ls0 ws0">[*] 3 Records Found</div><div class="t m0 x3 h40 ya16 fff fs5 fc0 sc0 ls0 ws0">user@kali:~$</div><div class="t m0 x4 hd ya17 ff4 fs7 fc0 sc0 ls0 ws0">When performing brute-force DNS lookups, the results will only be as good as the </div><div class="t m0 x3 hd ya18 ff4 fs7 fc0 sc0 ls0 ws0">wordlist you use. In this case, we used a custom host list containing only ten hosts to </div><div class="t m0 x3 hd ya19 ff4 fs7 fc0 sc0 ls0 ws0">look up a fe<span class="_ _0"/>w common hostnames. Kali Linux comes with a few good w<span class="_ _0"/>ordlists for </div><div class="t m0 x3 hd ya1a ff4 fs7 fc0 sc0 ls0 ws0">DNS brute-forcing preinstalled. These are described in the follo<span class="_ _0"/>wing table.</div><a class="" href="http://weak-target.com"><div class="d m1" style="border-style:none;position:absolute;left:388.329554px;bottom:306.019652px;width:76.000000px;height:12.000000px;background-color:rgba(255,255,255,0.000001);"/></a></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>