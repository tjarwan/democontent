<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf139" class="pf w2 h2" data-page-no="139"><div class="pc pc139 w2 h2"><img class="bi x94 y1d92 w6 h2e" alt="" src="bg139.png"/><div class="t m0 xbe h10 y83 ff1 fs9 fc0 sc0 lsa ws0">290<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x3 hd y172 ff4 fs7 fc0 sc0 ls0 ws0">detected by the computer by the vendor ID (VID) and product ID (PID) of the USB </div><div class="t m0 x3 hd y173 ff4 fs7 fc0 sc0 ls0 ws0">de<span class="_ _0"/>vice. Thus, these ltering systems are typically no more than simple black lists </div><div class="t m0 x3 hd y174 ff4 fs7 fc0 sc0 ls0 ws0">that don’t allo<span class="_ _0"/>w certain types of de<span class="_ _0"/>vices based on <span class="_ _2"/>VID and PID.</div><div class="t m0 x4 hd y175 ff4 fs7 fc0 sc0 ls0 ws0">Because our T<span class="_ _3"/>eensy backdoors will have the <span class="_ _2"/>VID and PID of a USB ke<span class="_ _0"/>yboard, we </div><div class="t m0 x3 hd y19c ff4 fs7 fc0 sc0 ls0 ws0">will completely bypass these ltering systems, since it’<span class="_ _2"/>s highly unlikely that users </div><div class="t m0 x3 hd y19d ff4 fs7 fc0 sc0 ls0 ws0">will be disallo<span class="_ _0"/>wed from using USB keyboards. <span class="_ _0"/>W<span class="_ _3"/>e also hav<span class="_ _0"/>e the ability to change </div><div class="t m0 x3 hd y178 ff4 fs7 fc0 sc0 ls0 ws0">both the <span class="_ _2"/>VID and PID to anything we choose by editing the usb_priv<span class="_ _0"/>ate.h header le.</div><div class="t m0 x3 h7 y1d93 ff1 fs3 fc0 sc0 ls0 ws0">Programming a T<span class="_ _3"/>eensy Device</div><div class="t m0 x3 hd y1d94 ff4 fs7 fc0 sc0 ls0 ws0">Programming the T<span class="_ _3"/>eensy is done via a Mini-B USB cable. The easiest way to </div><div class="t m0 x3 hd y1d95 ff4 fs7 fc0 sc0 ls0 ws0">program the T<span class="_ _3"/>eensy is to use the <span class="_ _0"/>Arduino inte<span class="_ _0"/>grated dev<span class="_ _0"/>elopment en<span class="_ _0"/>vironment </div><div class="t m0 x3 hd y1d96 ff4 fs7 fc0 sc0 ls0 ws0">(IDE) with the T<span class="_ _3"/>eensyduino add-on. The <span class="_ _2"/>Arduino IDE is specically designed for </div><div class="t m0 x3 hd y1d97 ff4 fs7 fc0 sc0 ls0 ws0">novice programmers and is thus v<span class="_ _0"/>ery easy to get started with. <span class="_ _0"/>W<span class="_ _3"/>e’ll focus on creating </div><div class="t m0 x3 hd y1d98 ff4 fs7 fc0 sc0 ls0 ws0">W<span class="_ _0"/>indo<span class="_ _0"/>ws payloads; ho<span class="_ _0"/>wev<span class="_ _0"/>er<span class="_ _0"/>, the same process w<span class="_ _0"/>ould work on a Linux computer<span class="_ _2"/>. In </div><div class="t m0 x3 hd y1d99 ff4 fs7 fc0 sc0 ls0 ws0">fact, we could use a <span class="_ _0"/>T<span class="_ _2"/>eensy device on an<span class="_ _0"/>y system; we would just need to adjust the </div><div class="t m0 x3 hd y1d9a ff4 fs7 fc0 sc0 ls0 ws0">payload to work with the correct operating system. It’<span class="_ _2"/>s easier to program, debug, and </div><div class="t m0 x3 hd y1d9b ff4 fs7 fc0 sc0 ls0 ws0">run the T<span class="_ _3"/>eensy from a single machine, so all of the examples here will be performed </div><div class="t m0 x3 hd y1d9c ff4 fs7 fc0 sc0 ls0 ws0">from a <span class="_ _0"/>W<span class="_ _0"/>indo<span class="_ _0"/>ws computer<span class="_ _2"/>.</div><div class="t m0 x65 hd y1d9d ff4 fs7 fc0 sc0 ls0 ws0">Do<span class="_ _0"/>wnload the <span class="_ _0"/>Arduino IDE from www<span class="_ _3"/>.arduino.cc/en/main/software </div><div class="t m0 x65 hd y1d9e ff4 fs7 fc0 sc0 ls0 ws0">Do<span class="_ _0"/>wnload T<span class="_ _3"/>eensyduino from www<span class="_ _0"/>.pjrc.com/teensy/teensyduino.html</div><div class="t m0 x4 hd y1d9f ff4 fs7 fc0 sc0 ls0 ws0">Open the <span class="_ _2"/>Arduino software, and you’<span class="_ _0"/>re presented with a blank source le. First, </div><div class="t m0 x3 hd y1da0 ff4 fs7 fc0 sc0 ls0 ws0">you need to select the type of T<span class="_ _3"/>eensy device you’ll be programming from the <span class="_ _0"/>T<span class="_ _3"/>ools </div><div class="t m0 x3 hd y1da1 ff4 fs7 fc0 sc0 ls0 ws0">menu. In this case, we’<span class="_ _2"/>re working with a T<span class="_ _2"/>eensy 2.0 de<span class="_ _0"/>vice, so we choose T<span class="_ _3"/>ools | </div><div class="t m0 x3 hd y1da2 ff4 fs7 fc0 sc0 ls0 ws0">Board: T<span class="_ _3"/>eensy 2.0. Next, we’ll ha<span class="_ _0"/>ve to dene that we’<span class="_ _0"/>ll be using T<span class="_ _3"/>eensy as a USB </div><div class="t m0 x3 hd y1da3 ff4 fs7 fc0 sc0 ls0 ws0">HID ke<span class="_ _0"/>yboard device. Choose <span class="_ _0"/>T<span class="_ _3"/>ools | USB T<span class="_ _3"/>ype: Keyboard + Mouse + Jo<span class="_ _0"/>ystick.</div><div class="t m0 x94 h2f y1da4 ffe fs9 fc0 sc0 ls0 ws0">NOTE</div><div class="t m0 x94 h14 yce1 ff9 fs7 fc0 sc0 ls0 ws0">If we were using the T<span class="_ _0"/>eensy SD card riser and wanted the computer to have direct access to mount </div><div class="t m0 x94 h14 y1da5 ff9 fs7 fc0 sc0 ls0 ws0">the SD card, we would choose T<span class="_ _0"/>ools | USB T<span class="_ _2"/>ype: Disk (SD Card) + Keyboard.</div><div class="t m0 x4 hd y1da6 ff4 fs7 fc0 sc0 ls0 ws0">As our rst example, we’<span class="_ _0"/>ll create the most simple test payload. In the following </div><div class="t m0 x3 hd y1da7 ff4 fs7 fc0 sc0 ls0 ws0">example, you’<span class="_ _0"/>ll notice two functions: setup and loop. The setup function is called </div><div class="t m0 x3 hd y1da8 ff4 fs7 fc0 sc0 ls0 ws0">once and run through in its entirety<span class="_ _2"/>, after which the loop function runs in a loop. This </div><div class="t m0 x3 hd y1da9 ff4 fs7 fc0 sc0 ls0 ws0">code is only about 4K compiled.</div><div class="t m0 x3 h44 y1daa fff fse fc0 sc0 ls0 ws0">// Default Teensy LED pin location = 11</div><div class="t m0 x3 h44 y1dab fff fse fc0 sc0 ls0 ws0">const int led = 11; </div><div class="t m0 x3 h44 y1dac fff fse fc0 sc0 ls0 ws0">void setup(void)</div><div class="t m0 x3 h44 y1dad fff fse fc0 sc0 ls0 ws0">{</div><a class="" href="http://www.arduino.cc/en/main/software"><div class="d m1" style="border-style:none;position:absolute;left:309.720333px;bottom:394.303855px;width:152.000000px;height:12.000000px;background-color:rgba(255,255,255,0.000001);"/></a><a class="" href="http://www.pjrc.com/teensy/teensyduino.html"><div class="d m1" style="border-style:none;position:absolute;left:289.160998px;bottom:378.582011px;width:175.000000px;height:12.000000px;background-color:rgba(255,255,255,0.000001);"/></a></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>