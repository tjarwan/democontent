<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf13a" class="pf w2 h2" data-page-no="13a"><div class="pc pc13a w2 h2"><img class="bi xaf yab6 w4 h7d" alt="" src="bg13a.png"/><div class="t m0 x2 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 8: Spear Phishing with Hardware T<span class="_ _0"/>rojans<span class="_ _9"> </span><span class="ff1 fs9 lsa">291</span></div><div class="t m0 x3 h44 yb3f fff fse fc0 sc0 ls0 ws0">      Serial.begin(9600);</div><div class="t m0 x3 h44 yb40 fff fse fc0 sc0 ls0 ws0">      delay(1000);</div><div class="t m0 x3 h44 yb41 fff fse fc0 sc0 ls0 ws0">      Keyboard.set_modifier(MODIFIERKEY_LEFT_GUI);</div><div class="t m0 x3 h44 yb42 fff fse fc0 sc0 ls0 ws0">      Keyboard.send_now();</div><div class="t m0 x3 h44 yb43 fff fse fc0 sc0 ls0 ws0">      Keyboard.set_modifier(0);</div><div class="t m0 x3 h44 yb44 fff fse fc0 sc0 ls0 ws0">      Keyboard.send_now();</div><div class="t m0 x3 h44 yb45 fff fse fc0 sc0 ls0 ws0">      delay(2000);</div><div class="t m0 x3 h44 yb63 fff fse fc0 sc0 ls0 ws0">      Keyboard.print("cmd.exe\n");</div><div class="t m0 x3 h44 yb64 fff fse fc0 sc0 ls0 ws0">}</div><div class="t m0 x3 h44 y1dae fff fse fc0 sc0 ls0 ws0">void loop(void){</div><div class="t m0 x3 h44 y1daf fff fse fc0 sc0 ls0 ws0">  digitalWrite(led, HIGH);</div><div class="t m0 x3 h44 y1db0 fff fse fc0 sc0 ls0 ws0">  delay(100);</div><div class="t m0 x3 h44 y1db1 fff fse fc0 sc0 ls0 ws0">  digitalWrite(led, LOW);</div><div class="t m0 x3 h44 y1db2 fff fse fc0 sc0 ls0 ws0">  delay(100);</div><div class="t m0 x3 h44 y1db3 fff fse fc0 sc0 ls0 ws0">}</div><div class="t m0 x4 hd y1db4 ff4 fs7 fc0 sc0 ls12 ws0">In this case, we are simply pressing the MODIFIERKEY_LEFT_GUI, which is the </div><div class="t m0 x3 hd y1db5 ff4 fs7 fc0 sc0 ls12 ws0">windo<span class="_ _0"/>ws Start button, and then sending cmd.e<span class="_ _0"/>xe and pressing <span class="ls2b ws33"> using the </span>ne<span class="_ _0"/>wline </div><div class="t m0 x3 hd y1db6 ff4 fs7 fc0 sc0 ls12 ws0">character<span class="_ _2"/>. <span class="_ _0"/>After this, we make the light-emitting diode (LED) blink e<span class="_ _0"/>v<span class="_ _0"/>ery tenth of a </div><div class="t m0 x3 hd y1db7 ff4 fs7 fc0 sc0 ls12 ws16">second using the digitalWrite function. <span class="_ _2"/>Again, because only the LED blinking code is<span class="_ _1"/> </div><div class="t m0 x3 hd y1db8 ff4 fs7 fc0 sc0 ls12 ws0">in the loop function, this is the only code that runs in a loop; we’<span class="_ _2"/>re simply doing this<span class="_ _1"/> </div><div class="t m0 x3 hd y1db9 ff4 fs7 fc0 sc0 ls12 ws0">to understand the o<span class="_ _0"/>w of ex<span class="_ _0"/>ecution. <span class="_ _3"/>Y<span class="_ _3"/>ou’ll also notice the delay function is used a fe<span class="_ _0"/>w </div><div class="t m0 x3 hd y1dba ff4 fs7 fc0 sc0 ls12 ws0">times. This is to pre<span class="_ _0"/>v<span class="_ _0"/>ent our device from mo<span class="_ _0"/>ving too fast for the b<span class="_ _0"/>us or the computer<span class="_ _2"/>.<span class="_ _1"/> </div><div class="t m0 x3 hd y1dbb ff4 fs7 fc0 sc0 ls12 ws0">If we send ke<span class="_ _0"/>ystrokes too quickly<span class="_ _2"/>, chances are our payloads will simply not be sent </div><div class="t m0 x3 hd y1dbc ff4 fs7 fc0 sc0 ls12 ws0">correctly<span class="_ _2"/>, breaking any chance of successfully exploiting the computer<span class="_ _2"/>. The seconds </div><div class="t m0 x3 hd y1dbd ff4 fs7 fc0 sc0 ls12 ws0">are specied in milliseconds; thus, 1000 is equal to one second.</div><div class="t m0 x4 hd y1dbe ff4 fs7 fc0 sc0 ls0 ws0">Click the check icon to verify and compile the source code. <span class="_ _0"/>Then choose the right </div><div class="t m0 x3 hd y1dbf ff4 fs7 fc0 sc0 ls0 ws0">arro<span class="_ _0"/>w icon to upload the payload to the T<span class="_ _3"/>eensy and have it automatically e<span class="_ _0"/>xecute. </div><div class="t m0 x3 hd y1dc0 ff4 fs7 fc0 sc0 ls0 ws0">This will open the simple T<span class="_ _3"/>eensy Loader application shown in Figure 8-10. <span class="_ _0"/>The </div><div class="t m0 x3 h21 y1dc1 ff1 fs2 fc0 sc0 ls0 ws0">Figure 8-10<span class="_ _21"> </span><span class="ffc">T<span class="_ _3"/>eensy Loader application</span></div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>