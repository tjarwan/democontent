<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf89" class="pf w2 h2" data-page-no="89"><div class="pc pc89 w2 h2"><img class="bi xaa yac7 w6 h2e" alt="" src="bg89.png"/><div class="t m0 xab h10 y83 ff1 fs9 fc0 sc0 lsa ws0">114<span class="_ _d"> </span><span class="ff2 fs2 ls8">Advanced Persistent Threat Hacking<span class="_ _1e"/> </span></div><div class="t m0 x6e hd y172 ff4 fs7 fc0 sc0 ls0 ws0">Many times, the certicate information can gi<span class="_ _0"/>v<span class="_ _0"/>e you accurate information about the </div><div class="t m0 x6e hd y173 ff4 fs7 fc0 sc0 ls0 ws0">target system. F<span class="_ _0"/>or example, the certicate issuer or subject might indicate the v<span class="_ _0"/>endor </div><div class="t m0 x6e hd y174 ff4 fs7 fc0 sc0 ls0 ws0">or specic type of appliance.</div><div class="t m0 xaa h2f yccb ffe fs9 fc0 sc0 ls0 ws0">NOTE</div><div class="t m0 xaa h14 yccc ff9 fs7 fc0 sc0 ls0 ws0">For an alternative screenshot solution, check out the http-screenshot-html nmap script at </div><div class="t m0 xaa h14 yccd ff9 fs7 fc0 sc0 ls0 ws0">http://code.google.com/p/http-screenshot-html/.</div><div class="t m0 x3a hd ycce ff4 fs7 fc0 sc0 ls0 ws0">This method of loading the target web systems in a bro<span class="_ _0"/>wser and taking </div><div class="t m0 x6e hd yccf ff4 fs7 fc0 sc0 ls0 ws0">screenshots is obviously not the quick<span class="_ _0"/>est way<span class="_ _2"/>. In addition, while webshot is running, </div><div class="t m0 x6e hd ycd0 ff4 fs7 fc0 sc0 ls0 ws0">you won’<span class="_ _0"/>t be able to interact with the graphical en<span class="_ _0"/>vironment, as it will af<span class="_ _0"/>fect the </div><div class="t m0 x6e hd ycd1 ff4 fs7 fc0 sc0 ls0 ws0">screenshots. Ho<span class="_ _0"/>wev<span class="_ _0"/>er<span class="_ _0"/>, I ha<span class="_ _0"/>ve found this to be the most reliable w<span class="_ _0"/>ay of quickly </div><div class="t m0 x6e hd ycd2 ff4 fs7 fc0 sc0 ls0 ws0">identifying what remote systems actually look like.</div><div class="t m0 x3a hd ycd3 ff4 fs7 fc0 sc0 ls0 ws0">There are other tools that use the Selenium system to automate web bro<span class="_ _0"/>wser tasks. </div><div class="t m0 x6e hd ycd4 ff4 fs7 fc0 sc0 ls0 ws0">Selenium allo<span class="_ _0"/>ws scripts and programs to programmatically automate control and </div><div class="t m0 x6e hd ycd5 ff4 fs7 fc0 sc0 ls0 ws0">interaction with specic bro<span class="_ _0"/>wsers. These tools don’<span class="_ _0"/>t necessarily require the bro<span class="_ _0"/>wser </div><div class="t m0 x6e hd ycd6 ff4 fs7 fc0 sc0 ls0 ws0">to actually load and display each of the target websites; ho<span class="_ _0"/>we<span class="_ _0"/>ver<span class="_ _2"/>, at the time of this </div><div class="t m0 x6e hd ycd7 ff4 fs7 fc0 sc0 ls0 ws0">writing, there aren’t an<span class="_ _0"/>y systems that worked as reliably and as simply as loading the </div><div class="t m0 x6e hd ycd8 ff4 fs7 fc0 sc0 ls0 ws0">target website in a bro<span class="_ _0"/>wser<span class="_ _2"/>.</div><div class="t m0 x6e h7 ycd9 ff1 fs3 fc0 sc0 ls0 ws0">Quick Browsing</div><div class="t m0 x6e hd ycda ff4 fs7 fc0 sc0 ls0 ws0">If you’<span class="_ _2"/>d prefer to not capture screenshots, but instead wish to simply browse the sites </div><div class="t m0 x6e hd ycdb ff4 fs7 fc0 sc0 ls0 ws0">in a fast and ef<span class="_ _0"/>fecti<span class="_ _0"/>ve w<span class="_ _0"/>ay<span class="_ _2"/>, you can also script your fav<span class="_ _0"/>orite bro<span class="_ _0"/>wser<span class="_ _2"/>. <span class="_ _2"/>Y<span class="_ _1b"/>ou can use the </div><div class="t m0 x6e hd ycdc ff4 fs7 fc0 sc0 ls0 ws0">simple chromeloop.pl Perl script to do this for you. The script simply tak<span class="_ _0"/>es a single </div><div class="t m0 x6e hd ycdd ff4 fs7 fc0 sc0 ls0 ws0">argument, which is a te<span class="_ _0"/>xt le of URLs separated by ne<span class="_ _0"/>wlines, and opens each URL </div><div class="t m0 x6e hd ycde ff4 fs7 fc0 sc0 ls0 ws0">using the Chrome bro<span class="_ _0"/>wser<span class="_ _0"/>. <span class="_ _0"/>The default beha<span class="_ _0"/>vior of Chrome will open each URL in a </div><div class="t m0 x6e hd ycdf ff4 fs7 fc0 sc0 ls0 ws0">ne<span class="_ _0"/>w tab<span class="_ _0"/>.</div><div class="t m0 x3a hd yce0 ff4 fs7 fc0 sc0 ls0 ws0">Y<span class="_ _1b"/>ou can then use the hotkeys - and - to quickly switch </div><div class="t m0 x6e hd yce1 ff4 fs7 fc0 sc0 ls0 ws0">between tabs. If you nd a web system that is a duplicate or isn’t useful, you can </div><div class="t m0 x6e hd yce2 ff4 fs7 fc0 sc0 ls0 ws0">close it with -<span class="_ _2"/>.</div><div class="t m0 x6e h44 yce3 fff fse fc0 sc0 ls0 ws0">#!/usr/bin/perl</div><div class="t m0 x6e h44 yce4 fff fse fc0 sc0 ls0 ws0">$infile = @ARGV[0];</div><div class="t m0 x6e h44 yce5 fff fse fc0 sc0 ls0 ws0">open(INFILE, $infile) || die("Could not open $infile");</div><div class="t m0 x6e h44 yce6 fff fse fc0 sc0 ls0 ws0">while (&lt;INFILE&gt;) {</div><div class="t m0 x6e h44 yce7 fff fse fc0 sc0 ls0 ws0"> chomp ($_);</div><div class="t m0 x6e h44 yce8 fff fse fc0 sc0 ls0 ws0"> system("chromium-browser $_");</div><div class="t m0 x6e h44 yce9 fff fse fc0 sc0 ls0 ws0">}</div><div class="t m0 x6e h44 ycea fff fse fc0 sc0 ls0 ws0">close(INFILE);</div><a class="" href="http://code.google.com/p/http-screenshot-html/"><div class="d m1" style="border-style:none;position:absolute;left:135.570673px;bottom:591.431595px;width:169.000000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"/></a></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>