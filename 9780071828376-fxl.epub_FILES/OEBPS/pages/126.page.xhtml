<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title/><link rel="stylesheet" href="../css/base.min.css"/><link rel="stylesheet" href="../css/fancy.min.css"/><link rel="stylesheet" href="../css/pdf.css"/><meta name="viewport" content="width=640, height=824"/></head><body><div id="page_body"><div id="pf7e" class="pf w2 h2" data-page-no="7e"><div class="pc pc7e w2 h2"><div class="t m0 x93 h10 y83 ff2 fs2 fc0 sc0 ls8 ws0">Chapter 4: An APT Approach to Reconnaissance <span class="_ _3f"> </span><span class="ff1 fs9 lsa">103</span></div><div class="t m0 x3 h4c yb83 fff fs12 fc0 sc0 ls0 ws0">1226 i</div><div class="t m0 x3 h4c yb84 fff fs12 fc0 sc0 ls0 ws0">*                   209.124.176.223                        0 101 101 7018 1226 i</div><div class="t m0 x3 h4c yb85 fff fs12 fc0 sc0 ls0 ws0">*                   89.149.178.10           10             0 3257 7018 1226 i</div><div class="t m0 x3 h4c yb86 fff fs12 fc0 sc0 ls0 ws0">--- SNIP ---</div><div class="t m0 x3 h4c yb87 fff fs12 fc0 sc0 ls0 ws0">route-views&gt;</div><div class="t m0 x4 hd yb88 ff4 fs7 fc0 sc0 ls0 ws0">There are two basic elements to this re<span class="_ _0"/>gular expression. In a basic sense, the </div><div class="t m0 x3 hd yb89 ff4 fs7 fc0 sc0 ls0 ws0">underscore character (_) matches anything, although technically<span class="_ _3"/>, it is an expansion </div><div class="t m0 x3 hd yb8a ff4 fs7 fc0 sc0 ls0 ws0">that matches a comma (,), left brace ({), right brace(}), the beginning of the input </div><div class="t m0 x3 hd yb8b ff4 fs7 fc0 sc0 ls0 ws0">string, the end of the input string, or a space. The other element is the dollar sign ($), </div><div class="t m0 x3 hd yb8c ff4 fs7 fc0 sc0 ls0 ws0">which essentially matches the end of the line. So in this case, we are searching for </div><div class="t m0 x3 hd yb8d ff4 fs7 fc0 sc0 ls0 ws0">any line that ends with 1226.</div><div class="t m0 x4 hd yb8e ff4 fs7 fc0 sc0 ls0 ws0">This is exactly what we w<span class="_ _0"/>ant, as we want to identify any netw<span class="_ _0"/>orks where the <span class="_ _2"/>AS </div><div class="t m0 x3 hd yb8f ff4 fs7 fc0 sc0 ls0 ws0">1226 is the nal hop. I’<span class="_ _2"/>ve found that the easiest way to work with the output of this </div><div class="t m0 x3 h3f yb90 ff4 fs7 fc0 sc0 ls0 ws0">command is to copy it to a te<span class="_ _0"/>xt le and then use <span class="fff">grep</span> and <span class="fff">cut</span> commands, as in the </div><div class="t m0 x3 hd yb91 ff4 fs7 fc0 sc0 ls0 ws0">follo<span class="_ _0"/>wing example: </div><div class="t m0 x3 h44 yb92 fff fse fc0 sc0 ls0 ws0">cut -d " " -f3 ca-bgp-regexp.txt | sort -u</div><div class="t m0 x4 hd yb93 ff4 fs7 fc0 sc0 ls0 ws0">This command cuts the third eld (-f3) using the space character as the delimiter </div><div class="t m0 x3 hd yb94 ff4 fs7 fc0 sc0 ls0 ws0">(-d " "). <span class="_ _0"/>W<span class="_ _3"/>e then pipe the output into sort, which only shows the unique entries </div><div class="t m0 x3 hd yb95 ff4 fs7 fc0 sc0 ls0 ws0">because of the -u option. This will gi<span class="_ _0"/>v<span class="_ _0"/>e us all of the networks, as well as a fe<span class="_ _0"/>w lines </div><div class="t m0 x3 hd yb96 ff4 fs7 fc0 sc0 ls0 ws0">of junk, simply because not all the lines match the same format. Remov<span class="_ _0"/>e the lines of </div><div class="t m0 x3 hd yb97 ff4 fs7 fc0 sc0 ls0 ws0">junk, and we’<span class="_ _2"/>re left with all of the subnets that this <span class="_ _0"/>AS is advertising.</div><div class="t m0 x4 hd yb98 ff4 fs7 fc0 sc0 ls0 ws0">In this case, we hav<span class="_ _0"/>e 24 subnets. <span class="_ _2"/>Any entries that don’t list the netw<span class="_ _0"/>ork mask bits </div><div class="t m0 x3 hd yb99 ff4 fs7 fc0 sc0 ls0 ws0">use the standard mask of /8, /16, or /24 associated with that subnet.</div><div class="t m0 x3 h44 yb9a fff fse fc0 sc0 ls0 ws0">134.186.0.0</div><div class="t m0 x3 h44 yb9b fff fse fc0 sc0 ls0 ws0">134.187.0.0</div><div class="t m0 x3 h44 yb9c fff fse fc0 sc0 ls0 ws0">146.114.0.0</div><div class="t m0 x3 h44 yb9d fff fse fc0 sc0 ls0 ws0">151.143.0.0</div><div class="t m0 x3 h44 yb9e fff fse fc0 sc0 ls0 ws0">153.48.0.0</div><div class="t m0 x3 h44 yb9f fff fse fc0 sc0 ls0 ws0">156.41.0.0</div><div class="t m0 x3 h44 yba0 fff fse fc0 sc0 ls0 ws0">156.60.0.0</div><div class="t m0 x3 h44 yba1 fff fse fc0 sc0 ls0 ws0">158.96.0.0</div><div class="t m0 x3 h44 yba2 fff fse fc0 sc0 ls0 ws0">159.145.0.0</div><div class="t m0 x3 h44 yba3 fff fse fc0 sc0 ls0 ws0">160.88.0.0</div><div class="t m0 x3 h44 yba4 fff fse fc0 sc0 ls0 ws0">162.15.0.0</div><div class="t m0 x3 h44 yba5 fff fse fc0 sc0 ls0 ws0">162.2.0.0</div><div class="t m0 x3 h44 yba6 fff fse fc0 sc0 ls0 ws0">165.235.0.0</div></div><div class="pi" data-data="{&#34;ctm&#34;:[1.209373,0.000000,0.000000,1.209373,0.000000,0.000000]}"/></div></div></body></html>